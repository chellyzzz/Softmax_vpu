FIRRTL version 1.2.0
circuit top :
  module RegisterFile :
    input clock : Clock
    input reset : Reset
    output io : { flip wdata : UInt<32>, flip waddr : UInt<4>, flip exu_rd : UInt<4>, flip exu_wdata : UInt<32>, flip exu_wen : UInt<1>, flip wbu_rd : UInt<4>, flip wbu_wdata : UInt<32>, flip wbu_wen : UInt<1>, flip idu_wen : UInt<1>, flip idu_waddr : UInt<4>, flip raddr1 : UInt<4>, flip raddr2 : UInt<4>, rdata1 : UInt<32>, rdata2 : UInt<32>, flip wen : UInt<1>} @[scala/Registers/RegisterFile.scala 8:14]

    reg regfile : UInt<32>[32], clock with :
      reset => (UInt<1>("h0"), regfile) @[scala/Registers/RegisterFile.scala 32:20]
    regfile[0] <= UInt<1>("h0") @[scala/Registers/RegisterFile.scala 34:14]
    node _T = neq(io.waddr, UInt<1>("h0")) @[scala/Registers/RegisterFile.scala 36:28]
    node _T_1 = and(io.wen, _T) @[scala/Registers/RegisterFile.scala 36:16]
    when _T_1 : @[scala/Registers/RegisterFile.scala 36:37]
      regfile[io.waddr] <= io.wdata @[scala/Registers/RegisterFile.scala 37:23]
    node _io_rdata1_T = eq(io.raddr1, io.exu_rd) @[scala/Registers/RegisterFile.scala 40:30]
    node _io_rdata1_T_1 = and(_io_rdata1_T, io.exu_wen) @[scala/Registers/RegisterFile.scala 40:44]
    node _io_rdata1_T_2 = eq(io.raddr1, io.wbu_rd) @[scala/Registers/RegisterFile.scala 41:34]
    node _io_rdata1_T_3 = and(_io_rdata1_T_2, io.wbu_wen) @[scala/Registers/RegisterFile.scala 41:48]
    node _io_rdata1_T_4 = mux(_io_rdata1_T_3, io.wbu_wdata, regfile[io.raddr1]) @[scala/Registers/RegisterFile.scala 41:23]
    node _io_rdata1_T_5 = mux(_io_rdata1_T_1, io.exu_wdata, _io_rdata1_T_4) @[scala/Registers/RegisterFile.scala 40:19]
    io.rdata1 <= _io_rdata1_T_5 @[scala/Registers/RegisterFile.scala 40:13]
    node _io_rdata2_T = eq(io.raddr2, io.exu_rd) @[scala/Registers/RegisterFile.scala 44:30]
    node _io_rdata2_T_1 = and(_io_rdata2_T, io.exu_wen) @[scala/Registers/RegisterFile.scala 44:44]
    node _io_rdata2_T_2 = eq(io.raddr2, io.wbu_rd) @[scala/Registers/RegisterFile.scala 45:34]
    node _io_rdata2_T_3 = and(_io_rdata2_T_2, io.wbu_wen) @[scala/Registers/RegisterFile.scala 45:48]
    node _io_rdata2_T_4 = mux(_io_rdata2_T_3, io.wbu_wdata, regfile[io.raddr2]) @[scala/Registers/RegisterFile.scala 45:23]
    node _io_rdata2_T_5 = mux(_io_rdata2_T_1, io.exu_wdata, _io_rdata2_T_4) @[scala/Registers/RegisterFile.scala 44:19]
    io.rdata2 <= _io_rdata2_T_5 @[scala/Registers/RegisterFile.scala 44:13]

  module CSR :
    input clock : Clock
    input reset : Reset
    output io : { flip i_csr_wen : UInt<1>, flip i_ecall : UInt<1>, flip i_mret : UInt<1>, flip i_pc : UInt<32>, flip i_csr_raddr : UInt<12>, o_csr_rdata : UInt<32>, flip i_csr_waddr : UInt<12>, flip i_csr_wdata : UInt<32>, o_mepc : UInt<32>, o_mtvec : UInt<32>} @[scala/Registers/csr.scala 8:14]

    reg mstatus : UInt<13>, clock with :
      reset => (reset, UInt<13>("h0")) @[scala/Registers/csr.scala 28:24]
    reg mepc : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[scala/Registers/csr.scala 29:21]
    reg mtvec : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[scala/Registers/csr.scala 30:22]
    when io.i_ecall : @[scala/Registers/csr.scala 32:20]
      mepc <= io.i_pc @[scala/Registers/csr.scala 33:10]
      node _mstatus_T = bits(mstatus, 12, 11) @[scala/Registers/csr.scala 34:27]
      node _mstatus_T_1 = bits(mstatus, 9, 8) @[scala/Registers/csr.scala 34:54]
      node _mstatus_T_2 = bits(mstatus, 6, 4) @[scala/Registers/csr.scala 34:69]
      node _mstatus_T_3 = bits(mstatus, 2, 0) @[scala/Registers/csr.scala 34:94]
      node mstatus_lo_hi = cat(_mstatus_T_2, UInt<1>("h0")) @[scala/Registers/csr.scala 34:19]
      node mstatus_lo = cat(mstatus_lo_hi, _mstatus_T_3) @[scala/Registers/csr.scala 34:19]
      node mstatus_hi_hi = cat(_mstatus_T, UInt<2>("h3")) @[scala/Registers/csr.scala 34:19]
      node mstatus_hi = cat(mstatus_hi_hi, _mstatus_T_1) @[scala/Registers/csr.scala 34:19]
      node _mstatus_T_4 = cat(mstatus_hi, mstatus_lo) @[scala/Registers/csr.scala 34:19]
      mstatus <= _mstatus_T_4 @[scala/Registers/csr.scala 34:13]
    else :
      when io.i_mret : @[scala/Registers/csr.scala 35:26]
        node _mstatus_T_5 = bits(mstatus, 12, 11) @[scala/Registers/csr.scala 36:27]
        node _mstatus_T_6 = bits(mstatus, 9, 8) @[scala/Registers/csr.scala 36:54]
        node _mstatus_T_7 = bits(mstatus, 6, 4) @[scala/Registers/csr.scala 36:79]
        node _mstatus_T_8 = bits(mstatus, 2, 0) @[scala/Registers/csr.scala 36:104]
        node mstatus_lo_hi_1 = cat(_mstatus_T_7, UInt<1>("h0")) @[scala/Registers/csr.scala 36:19]
        node mstatus_lo_1 = cat(mstatus_lo_hi_1, _mstatus_T_8) @[scala/Registers/csr.scala 36:19]
        node mstatus_hi_lo = cat(_mstatus_T_6, UInt<1>("h1")) @[scala/Registers/csr.scala 36:19]
        node mstatus_hi_hi_1 = cat(_mstatus_T_5, UInt<2>("h0")) @[scala/Registers/csr.scala 36:19]
        node mstatus_hi_1 = cat(mstatus_hi_hi_1, mstatus_hi_lo) @[scala/Registers/csr.scala 36:19]
        node _mstatus_T_9 = cat(mstatus_hi_1, mstatus_lo_1) @[scala/Registers/csr.scala 36:19]
        mstatus <= _mstatus_T_9 @[scala/Registers/csr.scala 36:13]
      else :
        when io.i_csr_wen : @[scala/Registers/csr.scala 38:29]
          node _T = eq(UInt<12>("h341"), io.i_csr_waddr) @[scala/Registers/csr.scala 39:28]
          when _T : @[scala/Registers/csr.scala 39:28]
            mepc <= io.i_csr_wdata @[scala/Registers/csr.scala 40:32]
          else :
            node _T_1 = eq(UInt<12>("h305"), io.i_csr_waddr) @[scala/Registers/csr.scala 39:28]
            when _T_1 : @[scala/Registers/csr.scala 39:28]
              mtvec <= io.i_csr_wdata @[scala/Registers/csr.scala 41:33]
    node _io_o_csr_rdata_T = eq(io.i_csr_raddr, UInt<12>("hf11")) @[scala/Registers/csr.scala 47:21]
    node _io_o_csr_rdata_T_1 = eq(io.i_csr_raddr, UInt<12>("hf12")) @[scala/Registers/csr.scala 48:21]
    node _io_o_csr_rdata_T_2 = eq(io.i_csr_raddr, UInt<12>("h300")) @[scala/Registers/csr.scala 49:21]
    node _io_o_csr_rdata_T_3 = cat(UInt<19>("h13"), mstatus) @[scala/Registers/csr.scala 49:46]
    node _io_o_csr_rdata_T_4 = eq(io.i_csr_raddr, UInt<12>("h341")) @[scala/Registers/csr.scala 50:21]
    node _io_o_csr_rdata_T_5 = eq(io.i_csr_raddr, UInt<12>("h342")) @[scala/Registers/csr.scala 51:21]
    node _io_o_csr_rdata_T_6 = eq(io.i_csr_raddr, UInt<12>("h305")) @[scala/Registers/csr.scala 52:21]
    node _io_o_csr_rdata_T_7 = mux(_io_o_csr_rdata_T_6, mtvec, UInt<1>("h0")) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_csr_rdata_T_8 = mux(_io_o_csr_rdata_T_5, UInt<32>("hb"), _io_o_csr_rdata_T_7) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_csr_rdata_T_9 = mux(_io_o_csr_rdata_T_4, mepc, _io_o_csr_rdata_T_8) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_csr_rdata_T_10 = mux(_io_o_csr_rdata_T_2, _io_o_csr_rdata_T_3, _io_o_csr_rdata_T_9) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_csr_rdata_T_11 = mux(_io_o_csr_rdata_T_1, UInt<32>("h23060124"), _io_o_csr_rdata_T_10) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_csr_rdata_T_12 = mux(_io_o_csr_rdata_T, UInt<32>("h79737978"), _io_o_csr_rdata_T_11) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    io.o_csr_rdata <= _io_o_csr_rdata_T_12 @[scala/Registers/csr.scala 46:18]
    node _io_o_mepc_T = mux(io.i_mret, mepc, UInt<1>("h0")) @[scala/Registers/csr.scala 55:19]
    io.o_mepc <= _io_o_mepc_T @[scala/Registers/csr.scala 55:13]
    node _io_o_mtvec_T = mux(io.i_ecall, mtvec, UInt<1>("h0")) @[scala/Registers/csr.scala 56:20]
    io.o_mtvec <= _io_o_mtvec_T @[scala/Registers/csr.scala 56:14]

  module ICache :
    input clock : Clock
    input reset : Reset
    output io : { ifu : { AXI_AWADDR : UInt<32>, AXI_AWVALID : UInt<1>, flip AXI_AWREADY : UInt<1>, AXI_AWLEN : UInt<8>, AXI_AWSIZE : UInt<3>, AXI_AWBURST : UInt<2>, AXI_AWID : UInt<4>, AXI_WVALID : UInt<1>, flip AXI_WREADY : UInt<1>, AXI_WDATA : UInt<32>, AXI_WSTRB : UInt<4>, AXI_WLAST : UInt<1>, flip AXI_RDATA : UInt<32>, flip AXI_RRESP : UInt<2>, flip AXI_RVALID : UInt<1>, AXI_RREADY : UInt<1>, flip AXI_RID : UInt<4>, flip AXI_RLAST : UInt<1>, AXI_ARADDR : UInt<32>, AXI_ARVALID : UInt<1>, flip AXI_ARREADY : UInt<1>, AXI_ARID : UInt<4>, AXI_ARLEN : UInt<8>, AXI_ARSIZE : UInt<3>, AXI_ARBURST : UInt<2>, flip AXI_BRESP : UInt<2>, flip AXI_BVALID : UInt<1>, AXI_BREADY : UInt<1>, flip AXI_BID : UInt<4>}, flip addr : UInt<32>, data : UInt<32>, flip fence_i : UInt<1>, hit : UInt<1>} @[scala/ifu/icache.scala 14:14]

    reg axi_arvalid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[scala/ifu/icache.scala 31:28]
    reg axi_rready : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[scala/ifu/icache.scala 32:28]
    reg read_index : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[scala/ifu/icache.scala 33:28]
    reg araddr : UInt<27>, clock with :
      reset => (reset, UInt<27>("h0")) @[scala/ifu/icache.scala 34:28]
    reg idle : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[scala/ifu/icache.scala 35:28]
    reg cache_data : UInt<32>[8][2], clock with :
      reset => (UInt<1>("h0"), cache_data) @[scala/ifu/icache.scala 38:24]
    reg cache_tag : UInt<26>[2], clock with :
      reset => (UInt<1>("h0"), cache_tag) @[scala/ifu/icache.scala 39:24]
    reg cache_valid : UInt<1>[2], clock with :
      reset => (UInt<1>("h0"), cache_valid) @[scala/ifu/icache.scala 40:24]
    node _io_ifu_AXI_ARADDR_T = cat(araddr, UInt<5>("h0")) @[scala/ifu/icache.scala 43:27]
    io.ifu.AXI_ARADDR <= _io_ifu_AXI_ARADDR_T @[scala/ifu/icache.scala 43:21]
    io.ifu.AXI_ARVALID <= axi_arvalid @[scala/ifu/icache.scala 44:22]
    io.ifu.AXI_ARID <= UInt<1>("h0") @[scala/ifu/icache.scala 45:19]
    io.ifu.AXI_ARLEN <= UInt<3>("h7") @[scala/ifu/icache.scala 46:20]
    io.ifu.AXI_ARSIZE <= UInt<2>("h2") @[scala/ifu/icache.scala 47:21]
    io.ifu.AXI_ARBURST <= UInt<1>("h1") @[scala/ifu/icache.scala 48:22]
    io.ifu.AXI_RREADY <= axi_rready @[scala/ifu/icache.scala 49:21]
    io.ifu.AXI_AWADDR <= UInt<1>("h0") @[scala/ifu/icache.scala 51:22]
    io.ifu.AXI_AWVALID <= UInt<1>("h0") @[scala/ifu/icache.scala 52:22]
    io.ifu.AXI_AWLEN <= UInt<1>("h0") @[scala/ifu/icache.scala 53:22]
    io.ifu.AXI_AWSIZE <= UInt<1>("h0") @[scala/ifu/icache.scala 54:22]
    io.ifu.AXI_AWBURST <= UInt<1>("h0") @[scala/ifu/icache.scala 55:22]
    io.ifu.AXI_AWID <= UInt<1>("h0") @[scala/ifu/icache.scala 56:22]
    io.ifu.AXI_WVALID <= UInt<1>("h0") @[scala/ifu/icache.scala 57:22]
    io.ifu.AXI_WDATA <= UInt<1>("h0") @[scala/ifu/icache.scala 58:22]
    io.ifu.AXI_WSTRB <= UInt<1>("h0") @[scala/ifu/icache.scala 59:22]
    io.ifu.AXI_WLAST <= UInt<1>("h0") @[scala/ifu/icache.scala 60:22]
    io.ifu.AXI_BREADY <= UInt<1>("h0") @[scala/ifu/icache.scala 61:22]
    node tag = bits(araddr, 26, 1) @[scala/ifu/icache.scala 63:19]
    node index = bits(araddr, 5, 5) @[scala/ifu/icache.scala 64:21]
    node hit_tag = bits(io.addr, 31, 6) @[scala/ifu/icache.scala 65:24]
    node hit_index = bits(io.addr, 5, 5) @[scala/ifu/icache.scala 66:26]
    node hit_offset = bits(io.addr, 4, 0) @[scala/ifu/icache.scala 67:27]
    node _hit_T = eq(cache_tag[hit_index], hit_tag) @[scala/ifu/icache.scala 69:62]
    node hit = and(cache_valid[hit_index], _hit_T) @[scala/ifu/icache.scala 69:37]
    node _io_data_T = bits(hit_offset, 4, 2) @[scala/ifu/icache.scala 70:46]
    io.data <= cache_data[hit_index][_io_data_T] @[scala/ifu/icache.scala 70:11]
    io.hit <= hit @[scala/ifu/icache.scala 71:10]
    node _T = eq(io.ifu.AXI_ARREADY, UInt<1>("h0")) @[scala/ifu/icache.scala 73:30]
    node _T_1 = and(io.ifu.AXI_ARVALID, _T) @[scala/ifu/icache.scala 73:27]
    when _T_1 : @[scala/ifu/icache.scala 73:51]
      cache_tag[index] <= tag @[scala/ifu/icache.scala 74:22]
      cache_valid[index] <= UInt<1>("h0") @[scala/ifu/icache.scala 75:24]
    else :
      when io.ifu.AXI_RLAST : @[scala/ifu/icache.scala 76:32]
        cache_valid[index] <= UInt<1>("h1") @[scala/ifu/icache.scala 77:24]
      else :
        when io.fence_i : @[scala/ifu/icache.scala 78:26]
          cache_valid[0] <= UInt<1>("h0") @[scala/ifu/icache.scala 79:27]
          cache_valid[1] <= UInt<1>("h0") @[scala/ifu/icache.scala 79:27]
    node _T_2 = eq(hit, UInt<1>("h0")) @[scala/ifu/icache.scala 82:8]
    node _T_3 = and(_T_2, idle) @[scala/ifu/icache.scala 82:13]
    when _T_3 : @[scala/ifu/icache.scala 82:22]
      node _araddr_T = bits(io.addr, 31, 5) @[scala/ifu/icache.scala 83:22]
      araddr <= _araddr_T @[scala/ifu/icache.scala 83:12]
      idle <= UInt<1>("h0") @[scala/ifu/icache.scala 84:10]
    else :
      node _T_4 = and(io.ifu.AXI_RLAST, io.ifu.AXI_RREADY) @[scala/ifu/icache.scala 85:31]
      when _T_4 : @[scala/ifu/icache.scala 85:53]
        when hit : @[scala/ifu/icache.scala 86:15]
          araddr <= UInt<1>("h0") @[scala/ifu/icache.scala 87:14]
          idle <= UInt<1>("h1") @[scala/ifu/icache.scala 88:12]
        else :
          node _araddr_T_1 = bits(io.addr, 31, 5) @[scala/ifu/icache.scala 90:24]
          araddr <= _araddr_T_1 @[scala/ifu/icache.scala 90:14]
    node _T_5 = eq(hit, UInt<1>("h0")) @[scala/ifu/icache.scala 94:8]
    node _T_6 = and(_T_5, idle) @[scala/ifu/icache.scala 94:13]
    when _T_6 : @[scala/ifu/icache.scala 94:22]
      axi_arvalid <= UInt<1>("h1") @[scala/ifu/icache.scala 95:17]
    else :
      node _T_7 = and(axi_arvalid, io.ifu.AXI_ARREADY) @[scala/ifu/icache.scala 96:26]
      when _T_7 : @[scala/ifu/icache.scala 96:49]
        axi_arvalid <= UInt<1>("h0") @[scala/ifu/icache.scala 97:17]
      else :
        node _T_8 = and(io.ifu.AXI_RLAST, io.ifu.AXI_RREADY) @[scala/ifu/icache.scala 98:31]
        node _T_9 = eq(hit, UInt<1>("h0")) @[scala/ifu/icache.scala 98:55]
        node _T_10 = and(_T_8, _T_9) @[scala/ifu/icache.scala 98:52]
        when _T_10 : @[scala/ifu/icache.scala 98:61]
          axi_arvalid <= UInt<1>("h1") @[scala/ifu/icache.scala 99:17]
    node _T_11 = and(io.ifu.AXI_ARVALID, io.ifu.AXI_ARREADY) @[scala/ifu/icache.scala 102:27]
    when _T_11 : @[scala/ifu/icache.scala 102:50]
      read_index <= UInt<1>("h0") @[scala/ifu/icache.scala 103:16]
    else :
      node _T_12 = eq(io.ifu.AXI_RREADY, UInt<1>("h0")) @[scala/ifu/icache.scala 104:35]
      node _T_13 = and(io.ifu.AXI_RVALID, _T_12) @[scala/ifu/icache.scala 104:32]
      when _T_13 : @[scala/ifu/icache.scala 104:55]
        node _read_index_T = add(read_index, UInt<1>("h1")) @[scala/ifu/icache.scala 105:30]
        node _read_index_T_1 = tail(_read_index_T, 1) @[scala/ifu/icache.scala 105:30]
        read_index <= _read_index_T_1 @[scala/ifu/icache.scala 105:16]
    node _T_14 = eq(axi_rready, UInt<1>("h0")) @[scala/ifu/icache.scala 108:29]
    node _T_15 = and(io.ifu.AXI_RVALID, _T_14) @[scala/ifu/icache.scala 108:26]
    when _T_15 : @[scala/ifu/icache.scala 108:42]
      axi_rready <= UInt<1>("h1") @[scala/ifu/icache.scala 109:16]
    else :
      when axi_rready : @[scala/ifu/icache.scala 110:26]
        axi_rready <= UInt<1>("h0") @[scala/ifu/icache.scala 111:16]
    node _T_16 = eq(axi_rready, UInt<1>("h0")) @[scala/ifu/icache.scala 114:29]
    node _T_17 = and(io.ifu.AXI_RVALID, _T_16) @[scala/ifu/icache.scala 114:26]
    when _T_17 : @[scala/ifu/icache.scala 114:42]
      cache_data[index][read_index] <= io.ifu.AXI_RDATA @[scala/ifu/icache.scala 115:35]


  module Xbar :
    input clock : Clock
    input reset : Reset
    output io : { ifu : { flip AXI_AWADDR : UInt<32>, flip AXI_AWVALID : UInt<1>, AXI_AWREADY : UInt<1>, flip AXI_AWLEN : UInt<8>, flip AXI_AWSIZE : UInt<3>, flip AXI_AWBURST : UInt<2>, flip AXI_AWID : UInt<4>, flip AXI_WVALID : UInt<1>, AXI_WREADY : UInt<1>, flip AXI_WDATA : UInt<32>, flip AXI_WSTRB : UInt<4>, flip AXI_WLAST : UInt<1>, AXI_RDATA : UInt<32>, AXI_RRESP : UInt<2>, AXI_RVALID : UInt<1>, flip AXI_RREADY : UInt<1>, AXI_RID : UInt<4>, AXI_RLAST : UInt<1>, flip AXI_ARADDR : UInt<32>, flip AXI_ARVALID : UInt<1>, AXI_ARREADY : UInt<1>, flip AXI_ARID : UInt<4>, flip AXI_ARLEN : UInt<8>, flip AXI_ARSIZE : UInt<3>, flip AXI_ARBURST : UInt<2>, AXI_BRESP : UInt<2>, AXI_BVALID : UInt<1>, flip AXI_BREADY : UInt<1>, AXI_BID : UInt<4>}, lsu : { flip AXI_AWADDR : UInt<32>, flip AXI_AWVALID : UInt<1>, AXI_AWREADY : UInt<1>, flip AXI_AWLEN : UInt<8>, flip AXI_AWSIZE : UInt<3>, flip AXI_AWBURST : UInt<2>, flip AXI_AWID : UInt<4>, flip AXI_WVALID : UInt<1>, AXI_WREADY : UInt<1>, flip AXI_WDATA : UInt<32>, flip AXI_WSTRB : UInt<4>, flip AXI_WLAST : UInt<1>, AXI_RDATA : UInt<32>, AXI_RRESP : UInt<2>, AXI_RVALID : UInt<1>, flip AXI_RREADY : UInt<1>, AXI_RID : UInt<4>, AXI_RLAST : UInt<1>, flip AXI_ARADDR : UInt<32>, flip AXI_ARVALID : UInt<1>, AXI_ARREADY : UInt<1>, flip AXI_ARID : UInt<4>, flip AXI_ARLEN : UInt<8>, flip AXI_ARSIZE : UInt<3>, flip AXI_ARBURST : UInt<2>, AXI_BRESP : UInt<2>, AXI_BVALID : UInt<1>, flip AXI_BREADY : UInt<1>, AXI_BID : UInt<4>}, sram : { AXI_AWADDR : UInt<32>, AXI_AWVALID : UInt<1>, flip AXI_AWREADY : UInt<1>, AXI_AWLEN : UInt<8>, AXI_AWSIZE : UInt<3>, AXI_AWBURST : UInt<2>, AXI_AWID : UInt<4>, AXI_WVALID : UInt<1>, flip AXI_WREADY : UInt<1>, AXI_WDATA : UInt<32>, AXI_WSTRB : UInt<4>, AXI_WLAST : UInt<1>, flip AXI_RDATA : UInt<32>, flip AXI_RRESP : UInt<2>, flip AXI_RVALID : UInt<1>, AXI_RREADY : UInt<1>, flip AXI_RID : UInt<4>, flip AXI_RLAST : UInt<1>, AXI_ARADDR : UInt<32>, AXI_ARVALID : UInt<1>, flip AXI_ARREADY : UInt<1>, AXI_ARID : UInt<4>, AXI_ARLEN : UInt<8>, AXI_ARSIZE : UInt<3>, AXI_ARBURST : UInt<2>, flip AXI_BRESP : UInt<2>, flip AXI_BVALID : UInt<1>, AXI_BREADY : UInt<1>, flip AXI_BID : UInt<4>}} @[scala/include/Xbar.scala 10:14]

    node lsu_req = or(io.lsu.AXI_AWVALID, io.lsu.AXI_ARVALID) @[scala/include/Xbar.scala 23:38]
    node ifu_ram_finish = and(io.sram.AXI_RLAST, io.ifu.AXI_RREADY) @[scala/include/Xbar.scala 24:44]
    node lsu_ram_finish = or(io.sram.AXI_BREADY, io.lsu.AXI_RREADY) @[scala/include/Xbar.scala 25:44]
    reg state : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[scala/include/Xbar.scala 28:24]
    node _T = eq(UInt<2>("h0"), state) @[scala/include/Xbar.scala 30:19]
    when _T : @[scala/include/Xbar.scala 30:19]
      when io.ifu.AXI_ARVALID : @[scala/include/Xbar.scala 32:23]
        state <= UInt<2>("h1") @[scala/include/Xbar.scala 33:15]
      else :
        when lsu_req : @[scala/include/Xbar.scala 34:29]
          state <= UInt<2>("h2") @[scala/include/Xbar.scala 35:15]
    else :
      node _T_1 = eq(UInt<2>("h1"), state) @[scala/include/Xbar.scala 30:19]
      when _T_1 : @[scala/include/Xbar.scala 30:19]
        when ifu_ram_finish : @[scala/include/Xbar.scala 39:30]
          state <= UInt<2>("h0") @[scala/include/Xbar.scala 40:15]
      else :
        node _T_2 = eq(UInt<2>("h2"), state) @[scala/include/Xbar.scala 30:19]
        when _T_2 : @[scala/include/Xbar.scala 30:19]
          when lsu_ram_finish : @[scala/include/Xbar.scala 44:30]
            state <= UInt<2>("h0") @[scala/include/Xbar.scala 45:15]
    node _io_ifu_AXI_ARREADY_T = eq(state, UInt<2>("h1")) @[scala/include/Xbar.scala 50:37]
    node _io_ifu_AXI_ARREADY_T_1 = mux(_io_ifu_AXI_ARREADY_T, io.sram.AXI_ARREADY, UInt<1>("h0")) @[scala/include/Xbar.scala 50:30]
    io.ifu.AXI_ARREADY <= _io_ifu_AXI_ARREADY_T_1 @[scala/include/Xbar.scala 50:24]
    node _io_ifu_AXI_RVALID_T = eq(state, UInt<2>("h1")) @[scala/include/Xbar.scala 51:36]
    node _io_ifu_AXI_RVALID_T_1 = mux(_io_ifu_AXI_RVALID_T, io.sram.AXI_RVALID, UInt<1>("h0")) @[scala/include/Xbar.scala 51:29]
    io.ifu.AXI_RVALID <= _io_ifu_AXI_RVALID_T_1 @[scala/include/Xbar.scala 51:23]
    io.ifu.AXI_RDATA <= io.sram.AXI_RDATA @[scala/include/Xbar.scala 53:22]
    node _io_ifu_AXI_RRESP_T = eq(state, UInt<2>("h1")) @[scala/include/Xbar.scala 54:35]
    node _io_ifu_AXI_RRESP_T_1 = mux(_io_ifu_AXI_RRESP_T, io.sram.AXI_RRESP, UInt<1>("h0")) @[scala/include/Xbar.scala 54:28]
    io.ifu.AXI_RRESP <= _io_ifu_AXI_RRESP_T_1 @[scala/include/Xbar.scala 54:22]
    node _io_ifu_AXI_RLAST_T = eq(state, UInt<2>("h1")) @[scala/include/Xbar.scala 55:35]
    node _io_ifu_AXI_RLAST_T_1 = mux(_io_ifu_AXI_RLAST_T, io.sram.AXI_RLAST, UInt<1>("h0")) @[scala/include/Xbar.scala 55:28]
    io.ifu.AXI_RLAST <= _io_ifu_AXI_RLAST_T_1 @[scala/include/Xbar.scala 55:22]
    node _io_ifu_AXI_RID_T = eq(state, UInt<2>("h1")) @[scala/include/Xbar.scala 56:33]
    node _io_ifu_AXI_RID_T_1 = mux(_io_ifu_AXI_RID_T, io.sram.AXI_RID, UInt<1>("h0")) @[scala/include/Xbar.scala 56:26]
    io.ifu.AXI_RID <= _io_ifu_AXI_RID_T_1 @[scala/include/Xbar.scala 56:20]
    node _io_ifu_AXI_BID_T = eq(state, UInt<2>("h1")) @[scala/include/Xbar.scala 57:33]
    node _io_ifu_AXI_BID_T_1 = mux(_io_ifu_AXI_BID_T, io.sram.AXI_BID, UInt<1>("h0")) @[scala/include/Xbar.scala 57:26]
    io.ifu.AXI_BID <= _io_ifu_AXI_BID_T_1 @[scala/include/Xbar.scala 57:20]
    node _io_ifu_AXI_BRESP_T = eq(state, UInt<2>("h1")) @[scala/include/Xbar.scala 58:35]
    node _io_ifu_AXI_BRESP_T_1 = mux(_io_ifu_AXI_BRESP_T, io.sram.AXI_BRESP, UInt<1>("h0")) @[scala/include/Xbar.scala 58:28]
    io.ifu.AXI_BRESP <= _io_ifu_AXI_BRESP_T_1 @[scala/include/Xbar.scala 58:22]
    node _io_ifu_AXI_BVALID_T = eq(state, UInt<2>("h1")) @[scala/include/Xbar.scala 59:36]
    node _io_ifu_AXI_BVALID_T_1 = mux(_io_ifu_AXI_BVALID_T, io.sram.AXI_BVALID, UInt<1>("h0")) @[scala/include/Xbar.scala 59:29]
    io.ifu.AXI_BVALID <= _io_ifu_AXI_BVALID_T_1 @[scala/include/Xbar.scala 59:23]
    node _io_ifu_AXI_AWREADY_T = eq(state, UInt<2>("h1")) @[scala/include/Xbar.scala 60:37]
    node _io_ifu_AXI_AWREADY_T_1 = mux(_io_ifu_AXI_AWREADY_T, io.sram.AXI_AWREADY, UInt<1>("h0")) @[scala/include/Xbar.scala 60:30]
    io.ifu.AXI_AWREADY <= _io_ifu_AXI_AWREADY_T_1 @[scala/include/Xbar.scala 60:24]
    node _io_ifu_AXI_WREADY_T = eq(state, UInt<2>("h1")) @[scala/include/Xbar.scala 61:36]
    node _io_ifu_AXI_WREADY_T_1 = mux(_io_ifu_AXI_WREADY_T, io.sram.AXI_WREADY, UInt<1>("h0")) @[scala/include/Xbar.scala 61:29]
    io.ifu.AXI_WREADY <= _io_ifu_AXI_WREADY_T_1 @[scala/include/Xbar.scala 61:23]
    node _io_lsu_AXI_AWREADY_T = eq(state, UInt<2>("h2")) @[scala/include/Xbar.scala 63:37]
    node _io_lsu_AXI_AWREADY_T_1 = mux(_io_lsu_AXI_AWREADY_T, io.sram.AXI_AWREADY, UInt<1>("h0")) @[scala/include/Xbar.scala 63:30]
    io.lsu.AXI_AWREADY <= _io_lsu_AXI_AWREADY_T_1 @[scala/include/Xbar.scala 63:24]
    node _io_lsu_AXI_WREADY_T = eq(state, UInt<2>("h2")) @[scala/include/Xbar.scala 64:36]
    node _io_lsu_AXI_WREADY_T_1 = mux(_io_lsu_AXI_WREADY_T, io.sram.AXI_WREADY, UInt<1>("h0")) @[scala/include/Xbar.scala 64:29]
    io.lsu.AXI_WREADY <= _io_lsu_AXI_WREADY_T_1 @[scala/include/Xbar.scala 64:23]
    node _io_lsu_AXI_BVALID_T = eq(state, UInt<2>("h2")) @[scala/include/Xbar.scala 65:36]
    node _io_lsu_AXI_BVALID_T_1 = mux(_io_lsu_AXI_BVALID_T, io.sram.AXI_BVALID, UInt<1>("h0")) @[scala/include/Xbar.scala 65:29]
    io.lsu.AXI_BVALID <= _io_lsu_AXI_BVALID_T_1 @[scala/include/Xbar.scala 65:23]
    node _io_lsu_AXI_BRESP_T = eq(state, UInt<2>("h2")) @[scala/include/Xbar.scala 66:35]
    node _io_lsu_AXI_BRESP_T_1 = mux(_io_lsu_AXI_BRESP_T, io.sram.AXI_BRESP, UInt<1>("h0")) @[scala/include/Xbar.scala 66:28]
    io.lsu.AXI_BRESP <= _io_lsu_AXI_BRESP_T_1 @[scala/include/Xbar.scala 66:22]
    node _io_lsu_AXI_BID_T = eq(state, UInt<2>("h2")) @[scala/include/Xbar.scala 67:33]
    node _io_lsu_AXI_BID_T_1 = mux(_io_lsu_AXI_BID_T, io.sram.AXI_BID, UInt<1>("h0")) @[scala/include/Xbar.scala 67:26]
    io.lsu.AXI_BID <= _io_lsu_AXI_BID_T_1 @[scala/include/Xbar.scala 67:20]
    node _io_lsu_AXI_ARREADY_T = eq(state, UInt<2>("h2")) @[scala/include/Xbar.scala 68:37]
    node _io_lsu_AXI_ARREADY_T_1 = mux(_io_lsu_AXI_ARREADY_T, io.sram.AXI_ARREADY, UInt<1>("h0")) @[scala/include/Xbar.scala 68:30]
    io.lsu.AXI_ARREADY <= _io_lsu_AXI_ARREADY_T_1 @[scala/include/Xbar.scala 68:24]
    node _io_lsu_AXI_RVALID_T = eq(state, UInt<2>("h2")) @[scala/include/Xbar.scala 69:36]
    node _io_lsu_AXI_RVALID_T_1 = mux(_io_lsu_AXI_RVALID_T, io.sram.AXI_RVALID, UInt<1>("h0")) @[scala/include/Xbar.scala 69:29]
    io.lsu.AXI_RVALID <= _io_lsu_AXI_RVALID_T_1 @[scala/include/Xbar.scala 69:23]
    node _io_lsu_AXI_RDATA_T = eq(state, UInt<2>("h2")) @[scala/include/Xbar.scala 70:35]
    node _io_lsu_AXI_RDATA_T_1 = mux(_io_lsu_AXI_RDATA_T, io.sram.AXI_RDATA, UInt<1>("h0")) @[scala/include/Xbar.scala 70:28]
    io.lsu.AXI_RDATA <= _io_lsu_AXI_RDATA_T_1 @[scala/include/Xbar.scala 70:22]
    node _io_lsu_AXI_RRESP_T = eq(state, UInt<2>("h2")) @[scala/include/Xbar.scala 71:35]
    node _io_lsu_AXI_RRESP_T_1 = mux(_io_lsu_AXI_RRESP_T, io.sram.AXI_RRESP, UInt<1>("h0")) @[scala/include/Xbar.scala 71:28]
    io.lsu.AXI_RRESP <= _io_lsu_AXI_RRESP_T_1 @[scala/include/Xbar.scala 71:22]
    node _io_lsu_AXI_RLAST_T = eq(state, UInt<2>("h2")) @[scala/include/Xbar.scala 72:35]
    node _io_lsu_AXI_RLAST_T_1 = mux(_io_lsu_AXI_RLAST_T, io.sram.AXI_RLAST, UInt<1>("h0")) @[scala/include/Xbar.scala 72:28]
    io.lsu.AXI_RLAST <= _io_lsu_AXI_RLAST_T_1 @[scala/include/Xbar.scala 72:22]
    node _io_lsu_AXI_RID_T = eq(state, UInt<2>("h2")) @[scala/include/Xbar.scala 73:33]
    node _io_lsu_AXI_RID_T_1 = mux(_io_lsu_AXI_RID_T, io.sram.AXI_RID, UInt<1>("h0")) @[scala/include/Xbar.scala 73:26]
    io.lsu.AXI_RID <= _io_lsu_AXI_RID_T_1 @[scala/include/Xbar.scala 73:20]
    io.sram.AXI_AWADDR <= io.lsu.AXI_AWADDR @[scala/include/Xbar.scala 75:24]
    node _io_sram_AXI_AWVALID_T = eq(state, UInt<2>("h2")) @[scala/include/Xbar.scala 76:38]
    node _io_sram_AXI_AWVALID_T_1 = mux(_io_sram_AXI_AWVALID_T, io.lsu.AXI_AWVALID, UInt<1>("h0")) @[scala/include/Xbar.scala 76:31]
    io.sram.AXI_AWVALID <= _io_sram_AXI_AWVALID_T_1 @[scala/include/Xbar.scala 76:25]
    node _io_sram_AXI_AWID_T = eq(state, UInt<2>("h2")) @[scala/include/Xbar.scala 77:36]
    node _io_sram_AXI_AWID_T_1 = mux(_io_sram_AXI_AWID_T, io.lsu.AXI_AWID, UInt<1>("h0")) @[scala/include/Xbar.scala 77:29]
    io.sram.AXI_AWID <= _io_sram_AXI_AWID_T_1 @[scala/include/Xbar.scala 77:23]
    node _io_sram_AXI_WDATA_T = eq(state, UInt<2>("h2")) @[scala/include/Xbar.scala 78:36]
    node _io_sram_AXI_WDATA_T_1 = mux(_io_sram_AXI_WDATA_T, io.lsu.AXI_WDATA, UInt<1>("h0")) @[scala/include/Xbar.scala 78:29]
    io.sram.AXI_WDATA <= _io_sram_AXI_WDATA_T_1 @[scala/include/Xbar.scala 78:23]
    node _io_sram_AXI_WVALID_T = eq(state, UInt<2>("h2")) @[scala/include/Xbar.scala 79:37]
    node _io_sram_AXI_WVALID_T_1 = mux(_io_sram_AXI_WVALID_T, io.lsu.AXI_WVALID, UInt<1>("h0")) @[scala/include/Xbar.scala 79:30]
    io.sram.AXI_WVALID <= _io_sram_AXI_WVALID_T_1 @[scala/include/Xbar.scala 79:24]
    node _io_sram_AXI_WSTRB_T = eq(state, UInt<2>("h2")) @[scala/include/Xbar.scala 80:36]
    node _io_sram_AXI_WSTRB_T_1 = mux(_io_sram_AXI_WSTRB_T, io.lsu.AXI_WSTRB, UInt<1>("h0")) @[scala/include/Xbar.scala 80:29]
    io.sram.AXI_WSTRB <= _io_sram_AXI_WSTRB_T_1 @[scala/include/Xbar.scala 80:23]
    node _io_sram_AXI_WLAST_T = eq(state, UInt<2>("h2")) @[scala/include/Xbar.scala 81:36]
    node _io_sram_AXI_WLAST_T_1 = mux(_io_sram_AXI_WLAST_T, io.lsu.AXI_WLAST, UInt<1>("h0")) @[scala/include/Xbar.scala 81:29]
    io.sram.AXI_WLAST <= _io_sram_AXI_WLAST_T_1 @[scala/include/Xbar.scala 81:23]
    node _io_sram_AXI_BREADY_T = eq(state, UInt<2>("h2")) @[scala/include/Xbar.scala 82:37]
    node _io_sram_AXI_BREADY_T_1 = mux(_io_sram_AXI_BREADY_T, io.lsu.AXI_BREADY, UInt<1>("h0")) @[scala/include/Xbar.scala 82:30]
    io.sram.AXI_BREADY <= _io_sram_AXI_BREADY_T_1 @[scala/include/Xbar.scala 82:24]
    node _io_sram_AXI_ARADDR_T = eq(state, UInt<2>("h2")) @[scala/include/Xbar.scala 84:37]
    node _io_sram_AXI_ARADDR_T_1 = mux(_io_sram_AXI_ARADDR_T, io.lsu.AXI_ARADDR, io.ifu.AXI_ARADDR) @[scala/include/Xbar.scala 84:30]
    io.sram.AXI_ARADDR <= _io_sram_AXI_ARADDR_T_1 @[scala/include/Xbar.scala 84:24]
    node _io_sram_AXI_ARID_T = eq(state, UInt<2>("h2")) @[scala/include/Xbar.scala 85:37]
    node _io_sram_AXI_ARID_T_1 = eq(state, UInt<2>("h1")) @[scala/include/Xbar.scala 85:76]
    node _io_sram_AXI_ARID_T_2 = mux(_io_sram_AXI_ARID_T_1, io.ifu.AXI_RID, UInt<1>("h0")) @[scala/include/Xbar.scala 85:69]
    node _io_sram_AXI_ARID_T_3 = mux(_io_sram_AXI_ARID_T, io.lsu.AXI_RID, _io_sram_AXI_ARID_T_2) @[scala/include/Xbar.scala 85:30]
    io.sram.AXI_ARID <= _io_sram_AXI_ARID_T_3 @[scala/include/Xbar.scala 85:24]
    node _io_sram_AXI_ARVALID_T = eq(state, UInt<2>("h2")) @[scala/include/Xbar.scala 86:38]
    node _io_sram_AXI_ARVALID_T_1 = eq(state, UInt<2>("h1")) @[scala/include/Xbar.scala 86:81]
    node _io_sram_AXI_ARVALID_T_2 = mux(_io_sram_AXI_ARVALID_T_1, io.ifu.AXI_ARVALID, UInt<1>("h0")) @[scala/include/Xbar.scala 86:74]
    node _io_sram_AXI_ARVALID_T_3 = mux(_io_sram_AXI_ARVALID_T, io.lsu.AXI_ARVALID, _io_sram_AXI_ARVALID_T_2) @[scala/include/Xbar.scala 86:31]
    io.sram.AXI_ARVALID <= _io_sram_AXI_ARVALID_T_3 @[scala/include/Xbar.scala 86:25]
    node _io_sram_AXI_RREADY_T = eq(state, UInt<2>("h2")) @[scala/include/Xbar.scala 87:37]
    node _io_sram_AXI_RREADY_T_1 = eq(state, UInt<2>("h1")) @[scala/include/Xbar.scala 87:79]
    node _io_sram_AXI_RREADY_T_2 = mux(_io_sram_AXI_RREADY_T_1, io.ifu.AXI_RREADY, UInt<1>("h0")) @[scala/include/Xbar.scala 87:72]
    node _io_sram_AXI_RREADY_T_3 = mux(_io_sram_AXI_RREADY_T, io.lsu.AXI_RREADY, _io_sram_AXI_RREADY_T_2) @[scala/include/Xbar.scala 87:30]
    io.sram.AXI_RREADY <= _io_sram_AXI_RREADY_T_3 @[scala/include/Xbar.scala 87:24]
    node _io_sram_AXI_ARLEN_T = eq(state, UInt<2>("h2")) @[scala/include/Xbar.scala 88:36]
    node _io_sram_AXI_ARLEN_T_1 = eq(state, UInt<2>("h1")) @[scala/include/Xbar.scala 88:77]
    node _io_sram_AXI_ARLEN_T_2 = mux(_io_sram_AXI_ARLEN_T_1, io.ifu.AXI_ARLEN, UInt<1>("h0")) @[scala/include/Xbar.scala 88:70]
    node _io_sram_AXI_ARLEN_T_3 = mux(_io_sram_AXI_ARLEN_T, io.lsu.AXI_ARLEN, _io_sram_AXI_ARLEN_T_2) @[scala/include/Xbar.scala 88:29]
    io.sram.AXI_ARLEN <= _io_sram_AXI_ARLEN_T_3 @[scala/include/Xbar.scala 88:23]
    node _io_sram_AXI_ARSIZE_T = eq(state, UInt<2>("h2")) @[scala/include/Xbar.scala 89:37]
    node _io_sram_AXI_ARSIZE_T_1 = eq(state, UInt<2>("h1")) @[scala/include/Xbar.scala 89:79]
    node _io_sram_AXI_ARSIZE_T_2 = mux(_io_sram_AXI_ARSIZE_T_1, io.ifu.AXI_ARSIZE, UInt<1>("h0")) @[scala/include/Xbar.scala 89:72]
    node _io_sram_AXI_ARSIZE_T_3 = mux(_io_sram_AXI_ARSIZE_T, io.lsu.AXI_ARSIZE, _io_sram_AXI_ARSIZE_T_2) @[scala/include/Xbar.scala 89:30]
    io.sram.AXI_ARSIZE <= _io_sram_AXI_ARSIZE_T_3 @[scala/include/Xbar.scala 89:24]
    node _io_sram_AXI_ARBURST_T = eq(state, UInt<2>("h2")) @[scala/include/Xbar.scala 90:38]
    node _io_sram_AXI_ARBURST_T_1 = eq(state, UInt<2>("h1")) @[scala/include/Xbar.scala 90:81]
    node _io_sram_AXI_ARBURST_T_2 = mux(_io_sram_AXI_ARBURST_T_1, io.ifu.AXI_ARBURST, UInt<1>("h0")) @[scala/include/Xbar.scala 90:74]
    node _io_sram_AXI_ARBURST_T_3 = mux(_io_sram_AXI_ARBURST_T, io.lsu.AXI_ARBURST, _io_sram_AXI_ARBURST_T_2) @[scala/include/Xbar.scala 90:31]
    io.sram.AXI_ARBURST <= _io_sram_AXI_ARBURST_T_3 @[scala/include/Xbar.scala 90:25]
    node _io_sram_AXI_AWLEN_T = eq(state, UInt<2>("h2")) @[scala/include/Xbar.scala 92:36]
    node _io_sram_AXI_AWLEN_T_1 = mux(_io_sram_AXI_AWLEN_T, io.lsu.AXI_AWLEN, UInt<1>("h0")) @[scala/include/Xbar.scala 92:29]
    io.sram.AXI_AWLEN <= _io_sram_AXI_AWLEN_T_1 @[scala/include/Xbar.scala 92:23]
    node _io_sram_AXI_AWSIZE_T = eq(state, UInt<2>("h2")) @[scala/include/Xbar.scala 93:37]
    node _io_sram_AXI_AWSIZE_T_1 = mux(_io_sram_AXI_AWSIZE_T, io.lsu.AXI_AWSIZE, UInt<1>("h0")) @[scala/include/Xbar.scala 93:30]
    io.sram.AXI_AWSIZE <= _io_sram_AXI_AWSIZE_T_1 @[scala/include/Xbar.scala 93:24]
    node _io_sram_AXI_AWBURST_T = eq(state, UInt<2>("h2")) @[scala/include/Xbar.scala 94:38]
    node _io_sram_AXI_AWBURST_T_1 = mux(_io_sram_AXI_AWBURST_T, io.lsu.AXI_AWBURST, UInt<1>("h0")) @[scala/include/Xbar.scala 94:31]
    io.sram.AXI_AWBURST <= _io_sram_AXI_AWBURST_T_1 @[scala/include/Xbar.scala 94:25]

  module IFU :
    input clock : Clock
    input reset : Reset
    output io : { flip i_pc_next : UInt<32>, flip i_pc_update : UInt<1>, flip i_post_ready : UInt<1>, ins : UInt<32>, pc_next : UInt<32>, req_addr : UInt<32>, flip icache_ins : UInt<32>, flip hit : UInt<1>} @[scala/ifu/ifu.scala 9:14]

    reg pc_next : UInt<32>, clock with :
      reset => (reset, UInt<32>("h80000000")) @[scala/ifu/ifu.scala 25:24]
    when io.i_pc_update : @[scala/ifu/ifu.scala 27:24]
      pc_next <= io.i_pc_next @[scala/ifu/ifu.scala 28:13]
    else :
      node _T = and(io.hit, io.i_post_ready) @[scala/ifu/ifu.scala 29:22]
      when _T : @[scala/ifu/ifu.scala 29:41]
        node _pc_next_T = add(pc_next, UInt<3>("h4")) @[scala/ifu/ifu.scala 30:24]
        node _pc_next_T_1 = tail(_pc_next_T, 1) @[scala/ifu/ifu.scala 30:24]
        pc_next <= _pc_next_T_1 @[scala/ifu/ifu.scala 30:13]
      else :
        pc_next <= pc_next @[scala/ifu/ifu.scala 32:13]
    io.req_addr <= pc_next @[scala/ifu/ifu.scala 35:15]
    io.pc_next <= pc_next @[scala/ifu/ifu.scala 36:15]
    io.ins <= io.icache_ins @[scala/ifu/ifu.scala 37:10]

  module IFU2IDURegs :
    input clock : Clock
    input reset : Reset
    output io : { flip i_pc : UInt<32>, flip i_ins : UInt<32>, o_pc : UInt<32>, o_ins : UInt<32>, flip i_icache_hit : UInt<1>, flip i_pre_valid : UInt<1>, flip i_post_ready : UInt<1>, o_post_valid : UInt<1>} @[scala/ifu/ifu_idu_regs.scala 8:14]

    node _io_o_post_valid_T = and(io.i_post_ready, io.i_icache_hit) @[scala/ifu/ifu_idu_regs.scala 20:38]
    io.o_post_valid <= _io_o_post_valid_T @[scala/ifu/ifu_idu_regs.scala 20:19]
    reg pc : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[scala/ifu/ifu_idu_regs.scala 23:20]
    reg ins : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[scala/ifu/ifu_idu_regs.scala 24:20]
    node _T = and(io.i_icache_hit, io.i_post_ready) @[scala/ifu/ifu_idu_regs.scala 27:25]
    when _T : @[scala/ifu/ifu_idu_regs.scala 27:45]
      pc <= io.i_pc @[scala/ifu/ifu_idu_regs.scala 28:8]
      ins <= io.i_ins @[scala/ifu/ifu_idu_regs.scala 29:9]
    else :
      node _T_1 = not(io.i_icache_hit) @[scala/ifu/ifu_idu_regs.scala 30:16]
      node _T_2 = and(_T_1, io.i_post_ready) @[scala/ifu/ifu_idu_regs.scala 30:33]
      when _T_2 : @[scala/ifu/ifu_idu_regs.scala 30:53]
        pc <= UInt<1>("h0") @[scala/ifu/ifu_idu_regs.scala 31:8]
        ins <= UInt<1>("h0") @[scala/ifu/ifu_idu_regs.scala 32:9]
    io.o_pc <= pc @[scala/ifu/ifu_idu_regs.scala 36:12]
    io.o_ins <= ins @[scala/ifu/ifu_idu_regs.scala 37:12]

  module IDU :
    input clock : Clock
    input reset : Reset
    output io : { flip ins : UInt<32>, o_imm : UInt<32>, o_rd : UInt<5>, o_rs1 : UInt<5>, o_rs2 : UInt<5>, o_csr_addr : UInt<12>, o_exu_opt : UInt<3>, o_alu_opt : UInt<10>, o_wen : UInt<1>, o_csr_wen : UInt<1>, o_src_sel1 : UInt<2>, o_src_sel2 : UInt<3>, o_mret : UInt<1>, o_ecall : UInt<1>, o_load : UInt<1>, o_store : UInt<1>, o_brch : UInt<1>, o_jal : UInt<1>, o_jalr : UInt<1>, o_ebreak : UInt<1>, o_fence_i : UInt<1>} @[scala/idu/idu.scala 8:14]

    node func3 = bits(io.ins, 14, 12) @[scala/idu/idu.scala 96:24]
    node opcode = bits(io.ins, 6, 0) @[scala/idu/idu.scala 97:24]
    node func7 = bits(io.ins, 31, 25) @[scala/idu/idu.scala 98:24]
    node rs1 = bits(io.ins, 19, 15) @[scala/idu/idu.scala 99:24]
    node rs2 = bits(io.ins, 24, 20) @[scala/idu/idu.scala 100:24]
    node rd = bits(io.ins, 11, 7) @[scala/idu/idu.scala 101:24]
    node TYPEI = eq(opcode, UInt<7>("h13")) @[scala/idu/idu.scala 104:28]
    node TYPEI_LOAD = eq(opcode, UInt<7>("h3")) @[scala/idu/idu.scala 105:28]
    node TYPER = eq(opcode, UInt<7>("h33")) @[scala/idu/idu.scala 106:28]
    node TYPELUI = eq(opcode, UInt<7>("h37")) @[scala/idu/idu.scala 107:28]
    node TYPEAUIPC = eq(opcode, UInt<7>("h17")) @[scala/idu/idu.scala 108:28]
    node TYPEJAL = eq(opcode, UInt<7>("h6f")) @[scala/idu/idu.scala 109:28]
    node TYPEJALR = eq(opcode, UInt<7>("h67")) @[scala/idu/idu.scala 110:28]
    node TYPES = eq(opcode, UInt<7>("h23")) @[scala/idu/idu.scala 111:28]
    node TYPEB = eq(opcode, UInt<7>("h63")) @[scala/idu/idu.scala 112:28]
    node TYPEEBRK = eq(opcode, UInt<7>("h73")) @[scala/idu/idu.scala 113:28]
    node TYPEFENCE = eq(opcode, UInt<7>("hf")) @[scala/idu/idu.scala 114:28]
    node _CSRRS_T = eq(func3, UInt<3>("h2")) @[scala/idu/idu.scala 116:34]
    node CSRRS = and(TYPEEBRK, _CSRRS_T) @[scala/idu/idu.scala 116:25]
    node _CSRRW_T = eq(func3, UInt<3>("h1")) @[scala/idu/idu.scala 117:34]
    node CSRRW = and(TYPEEBRK, _CSRRW_T) @[scala/idu/idu.scala 117:25]
    node _io_o_imm_T = or(TYPEI, TYPEI_LOAD) @[scala/idu/idu.scala 120:25]
    node _io_o_imm_T_1 = bits(io.ins, 31, 31) @[scala/idu/idu.scala 120:59]
    node _io_o_imm_T_2 = mux(_io_o_imm_T_1, UInt<20>("hfffff"), UInt<20>("h0")) @[scala/idu/idu.scala 120:48]
    node _io_o_imm_T_3 = bits(io.ins, 31, 20) @[scala/idu/idu.scala 120:72]
    node _io_o_imm_T_4 = cat(_io_o_imm_T_2, _io_o_imm_T_3) @[scala/idu/idu.scala 120:43]
    node _io_o_imm_T_5 = or(TYPELUI, TYPEAUIPC) @[scala/idu/idu.scala 121:28]
    node _io_o_imm_T_6 = bits(io.ins, 31, 12) @[scala/idu/idu.scala 121:52]
    node _io_o_imm_T_7 = cat(_io_o_imm_T_6, UInt<12>("h0")) @[scala/idu/idu.scala 121:45]
    node _io_o_imm_T_8 = bits(io.ins, 31, 31) @[scala/idu/idu.scala 122:48]
    node _io_o_imm_T_9 = mux(_io_o_imm_T_8, UInt<12>("hfff"), UInt<12>("h0")) @[scala/idu/idu.scala 122:37]
    node _io_o_imm_T_10 = bits(io.ins, 19, 12) @[scala/idu/idu.scala 122:61]
    node _io_o_imm_T_11 = bits(io.ins, 20, 20) @[scala/idu/idu.scala 122:77]
    node _io_o_imm_T_12 = bits(io.ins, 30, 21) @[scala/idu/idu.scala 122:89]
    node io_o_imm_lo = cat(_io_o_imm_T_12, UInt<1>("h0")) @[scala/idu/idu.scala 122:32]
    node io_o_imm_hi_hi = cat(_io_o_imm_T_9, _io_o_imm_T_10) @[scala/idu/idu.scala 122:32]
    node io_o_imm_hi = cat(io_o_imm_hi_hi, _io_o_imm_T_11) @[scala/idu/idu.scala 122:32]
    node _io_o_imm_T_13 = cat(io_o_imm_hi, io_o_imm_lo) @[scala/idu/idu.scala 122:32]
    node _io_o_imm_T_14 = bits(io.ins, 31, 31) @[scala/idu/idu.scala 123:49]
    node _io_o_imm_T_15 = mux(_io_o_imm_T_14, UInt<20>("hfffff"), UInt<20>("h0")) @[scala/idu/idu.scala 123:38]
    node _io_o_imm_T_16 = bits(io.ins, 31, 20) @[scala/idu/idu.scala 123:62]
    node _io_o_imm_T_17 = cat(_io_o_imm_T_15, _io_o_imm_T_16) @[scala/idu/idu.scala 123:33]
    node _io_o_imm_T_18 = bits(io.ins, 31, 31) @[scala/idu/idu.scala 124:46]
    node _io_o_imm_T_19 = mux(_io_o_imm_T_18, UInt<20>("hfffff"), UInt<20>("h0")) @[scala/idu/idu.scala 124:35]
    node _io_o_imm_T_20 = bits(io.ins, 7, 7) @[scala/idu/idu.scala 124:59]
    node _io_o_imm_T_21 = bits(io.ins, 30, 25) @[scala/idu/idu.scala 124:70]
    node _io_o_imm_T_22 = bits(io.ins, 11, 8) @[scala/idu/idu.scala 124:86]
    node io_o_imm_lo_1 = cat(_io_o_imm_T_22, UInt<1>("h0")) @[scala/idu/idu.scala 124:30]
    node io_o_imm_hi_hi_1 = cat(_io_o_imm_T_19, _io_o_imm_T_20) @[scala/idu/idu.scala 124:30]
    node io_o_imm_hi_1 = cat(io_o_imm_hi_hi_1, _io_o_imm_T_21) @[scala/idu/idu.scala 124:30]
    node _io_o_imm_T_23 = cat(io_o_imm_hi_1, io_o_imm_lo_1) @[scala/idu/idu.scala 124:30]
    node _io_o_imm_T_24 = bits(io.ins, 31, 31) @[scala/idu/idu.scala 125:46]
    node _io_o_imm_T_25 = mux(_io_o_imm_T_24, UInt<20>("hfffff"), UInt<20>("h0")) @[scala/idu/idu.scala 125:35]
    node _io_o_imm_T_26 = bits(io.ins, 31, 25) @[scala/idu/idu.scala 125:59]
    node _io_o_imm_T_27 = bits(io.ins, 11, 7) @[scala/idu/idu.scala 125:75]
    node io_o_imm_hi_2 = cat(_io_o_imm_T_25, _io_o_imm_T_26) @[scala/idu/idu.scala 125:30]
    node _io_o_imm_T_28 = cat(io_o_imm_hi_2, _io_o_imm_T_27) @[scala/idu/idu.scala 125:30]
    node _io_o_imm_T_29 = mux(TYPES, _io_o_imm_T_28, UInt<32>("h0")) @[scala/idu/idu.scala 125:19]
    node _io_o_imm_T_30 = mux(TYPEB, _io_o_imm_T_23, _io_o_imm_T_29) @[scala/idu/idu.scala 124:19]
    node _io_o_imm_T_31 = mux(TYPEJALR, _io_o_imm_T_17, _io_o_imm_T_30) @[scala/idu/idu.scala 123:19]
    node _io_o_imm_T_32 = mux(TYPEJAL, _io_o_imm_T_13, _io_o_imm_T_31) @[scala/idu/idu.scala 122:19]
    node _io_o_imm_T_33 = mux(_io_o_imm_T_5, _io_o_imm_T_7, _io_o_imm_T_32) @[scala/idu/idu.scala 121:19]
    node _io_o_imm_T_34 = mux(_io_o_imm_T, _io_o_imm_T_4, _io_o_imm_T_33) @[scala/idu/idu.scala 120:18]
    io.o_imm <= _io_o_imm_T_34 @[scala/idu/idu.scala 120:12]
    io.o_rd <= rd @[scala/idu/idu.scala 129:14]
    node _io_o_rs1_T = or(TYPEAUIPC, TYPELUI) @[scala/idu/idu.scala 130:31]
    node _io_o_rs1_T_1 = or(_io_o_rs1_T, TYPEJAL) @[scala/idu/idu.scala 130:42]
    node _io_o_rs1_T_2 = mux(_io_o_rs1_T_1, UInt<5>("h0"), rs1) @[scala/idu/idu.scala 130:20]
    io.o_rs1 <= _io_o_rs1_T_2 @[scala/idu/idu.scala 130:14]
    node _io_o_rs2_T = or(TYPER, TYPEB) @[scala/idu/idu.scala 131:27]
    node _io_o_rs2_T_1 = or(_io_o_rs2_T, TYPES) @[scala/idu/idu.scala 131:36]
    node _io_o_rs2_T_2 = mux(_io_o_rs2_T_1, rs2, UInt<5>("h0")) @[scala/idu/idu.scala 131:20]
    io.o_rs2 <= _io_o_rs2_T_2 @[scala/idu/idu.scala 131:14]
    node _io_o_csr_addr_T = bits(io.ins, 31, 20) @[scala/idu/idu.scala 133:40]
    node _io_o_csr_addr_T_1 = mux(TYPEEBRK, _io_o_csr_addr_T, UInt<12>("h0")) @[scala/idu/idu.scala 133:23]
    io.o_csr_addr <= _io_o_csr_addr_T_1 @[scala/idu/idu.scala 133:17]
    node _io_o_wen_T = or(TYPES, TYPEB) @[scala/idu/idu.scala 135:25]
    node _io_o_wen_T_1 = or(_io_o_wen_T, TYPEFENCE) @[scala/idu/idu.scala 135:34]
    node _io_o_wen_T_2 = mux(_io_o_wen_T_1, UInt<1>("h0"), UInt<1>("h1")) @[scala/idu/idu.scala 135:18]
    io.o_wen <= _io_o_wen_T_2 @[scala/idu/idu.scala 135:12]
    node _io_o_csr_wen_T = or(CSRRS, CSRRW) @[scala/idu/idu.scala 136:25]
    io.o_csr_wen <= _io_o_csr_wen_T @[scala/idu/idu.scala 136:16]
    node _o_if_unsigned_T = eq(func3, UInt<3>("h5")) @[scala/idu/idu.scala 139:39]
    node _o_if_unsigned_T_1 = and(TYPEI, _o_if_unsigned_T) @[scala/idu/idu.scala 139:30]
    node _o_if_unsigned_T_2 = bits(func7, 5, 5) @[scala/idu/idu.scala 139:60]
    node _o_if_unsigned_T_3 = and(_o_if_unsigned_T_1, _o_if_unsigned_T_2) @[scala/idu/idu.scala 139:52]
    node _o_if_unsigned_T_4 = eq(func3, UInt<3>("h5")) @[scala/idu/idu.scala 140:40]
    node _o_if_unsigned_T_5 = and(TYPER, _o_if_unsigned_T_4) @[scala/idu/idu.scala 140:31]
    node _o_if_unsigned_T_6 = bits(func7, 5, 5) @[scala/idu/idu.scala 140:61]
    node _o_if_unsigned_T_7 = and(_o_if_unsigned_T_5, _o_if_unsigned_T_6) @[scala/idu/idu.scala 140:53]
    node _o_if_unsigned_T_8 = or(_o_if_unsigned_T_3, _o_if_unsigned_T_7) @[scala/idu/idu.scala 139:65]
    node _o_if_unsigned_T_9 = eq(func3, UInt<1>("h0")) @[scala/idu/idu.scala 141:40]
    node _o_if_unsigned_T_10 = and(TYPER, _o_if_unsigned_T_9) @[scala/idu/idu.scala 141:31]
    node _o_if_unsigned_T_11 = bits(func7, 5, 5) @[scala/idu/idu.scala 141:61]
    node _o_if_unsigned_T_12 = and(_o_if_unsigned_T_10, _o_if_unsigned_T_11) @[scala/idu/idu.scala 141:53]
    node o_if_unsigned = or(_o_if_unsigned_T_8, _o_if_unsigned_T_12) @[scala/idu/idu.scala 140:66]
    io.o_exu_opt <= func3 @[scala/idu/idu.scala 143:16]
    node _exu_opt_T = bits(func3, 2, 1) @[scala/idu/idu.scala 145:50]
    node _exu_opt_T_1 = cat(UInt<1>("h0"), _exu_opt_T) @[scala/idu/idu.scala 145:31]
    node exu_opt = mux(TYPEB, _exu_opt_T_1, func3) @[scala/idu/idu.scala 145:20]
    node _io_o_alu_opt_T = or(TYPES, TYPEI_LOAD) @[scala/idu/idu.scala 148:30]
    node _io_o_alu_opt_T_1 = or(_io_o_alu_opt_T, TYPELUI) @[scala/idu/idu.scala 148:44]
    node _io_o_alu_opt_T_2 = or(_io_o_alu_opt_T_1, TYPEAUIPC) @[scala/idu/idu.scala 148:55]
    node _io_o_alu_opt_T_3 = or(_io_o_alu_opt_T_2, TYPEJAL) @[scala/idu/idu.scala 148:68]
    node _io_o_alu_opt_T_4 = eq(exu_opt, UInt<1>("h0")) @[scala/idu/idu.scala 151:36]
    node _io_o_alu_opt_T_5 = eq(o_if_unsigned, UInt<1>("h0")) @[scala/idu/idu.scala 151:52]
    node _io_o_alu_opt_T_6 = and(_io_o_alu_opt_T_4, _io_o_alu_opt_T_5) @[scala/idu/idu.scala 151:49]
    node _io_o_alu_opt_T_7 = eq(exu_opt, UInt<1>("h0")) @[scala/idu/idu.scala 152:36]
    node _io_o_alu_opt_T_8 = and(_io_o_alu_opt_T_7, o_if_unsigned) @[scala/idu/idu.scala 152:49]
    node _io_o_alu_opt_T_9 = eq(exu_opt, UInt<1>("h1")) @[scala/idu/idu.scala 153:36]
    node _io_o_alu_opt_T_10 = eq(exu_opt, UInt<2>("h2")) @[scala/idu/idu.scala 154:36]
    node _io_o_alu_opt_T_11 = eq(exu_opt, UInt<2>("h3")) @[scala/idu/idu.scala 155:36]
    node _io_o_alu_opt_T_12 = eq(exu_opt, UInt<3>("h4")) @[scala/idu/idu.scala 156:36]
    node _io_o_alu_opt_T_13 = eq(exu_opt, UInt<3>("h5")) @[scala/idu/idu.scala 157:36]
    node _io_o_alu_opt_T_14 = and(_io_o_alu_opt_T_13, o_if_unsigned) @[scala/idu/idu.scala 157:49]
    node _io_o_alu_opt_T_15 = eq(exu_opt, UInt<3>("h5")) @[scala/idu/idu.scala 158:36]
    node _io_o_alu_opt_T_16 = eq(o_if_unsigned, UInt<1>("h0")) @[scala/idu/idu.scala 158:52]
    node _io_o_alu_opt_T_17 = and(_io_o_alu_opt_T_15, _io_o_alu_opt_T_16) @[scala/idu/idu.scala 158:49]
    node _io_o_alu_opt_T_18 = eq(exu_opt, UInt<3>("h6")) @[scala/idu/idu.scala 159:36]
    node _io_o_alu_opt_T_19 = eq(exu_opt, UInt<3>("h7")) @[scala/idu/idu.scala 160:36]
    node _io_o_alu_opt_T_20 = mux(_io_o_alu_opt_T_19, UInt<10>("h100"), UInt<10>("h1")) @[scala/idu/idu.scala 160:27]
    node _io_o_alu_opt_T_21 = mux(_io_o_alu_opt_T_18, UInt<10>("h80"), _io_o_alu_opt_T_20) @[scala/idu/idu.scala 159:27]
    node _io_o_alu_opt_T_22 = mux(_io_o_alu_opt_T_17, UInt<10>("h200"), _io_o_alu_opt_T_21) @[scala/idu/idu.scala 158:27]
    node _io_o_alu_opt_T_23 = mux(_io_o_alu_opt_T_14, UInt<10>("h40"), _io_o_alu_opt_T_22) @[scala/idu/idu.scala 157:27]
    node _io_o_alu_opt_T_24 = mux(_io_o_alu_opt_T_12, UInt<10>("h20"), _io_o_alu_opt_T_23) @[scala/idu/idu.scala 156:27]
    node _io_o_alu_opt_T_25 = mux(_io_o_alu_opt_T_11, UInt<10>("h10"), _io_o_alu_opt_T_24) @[scala/idu/idu.scala 155:27]
    node _io_o_alu_opt_T_26 = mux(_io_o_alu_opt_T_10, UInt<10>("h8"), _io_o_alu_opt_T_25) @[scala/idu/idu.scala 154:27]
    node _io_o_alu_opt_T_27 = mux(_io_o_alu_opt_T_9, UInt<10>("h4"), _io_o_alu_opt_T_26) @[scala/idu/idu.scala 153:27]
    node _io_o_alu_opt_T_28 = mux(_io_o_alu_opt_T_8, UInt<10>("h2"), _io_o_alu_opt_T_27) @[scala/idu/idu.scala 152:27]
    node _io_o_alu_opt_T_29 = mux(_io_o_alu_opt_T_6, UInt<10>("h1"), _io_o_alu_opt_T_28) @[scala/idu/idu.scala 151:27]
    node _io_o_alu_opt_T_30 = mux(CSRRW, UInt<10>("h1"), _io_o_alu_opt_T_29) @[scala/idu/idu.scala 150:27]
    node _io_o_alu_opt_T_31 = mux(CSRRS, UInt<10>("h80"), _io_o_alu_opt_T_30) @[scala/idu/idu.scala 149:27]
    node _io_o_alu_opt_T_32 = mux(_io_o_alu_opt_T_3, UInt<10>("h1"), _io_o_alu_opt_T_31) @[scala/idu/idu.scala 148:22]
    io.o_alu_opt <= _io_o_alu_opt_T_32 @[scala/idu/idu.scala 148:16]
    node _io_o_src_sel1_T = eq(opcode, UInt<7>("h13")) @[scala/idu/idu.scala 164:13]
    node _io_o_src_sel1_T_1 = eq(opcode, UInt<7>("h33")) @[scala/idu/idu.scala 165:13]
    node _io_o_src_sel1_T_2 = eq(opcode, UInt<7>("h37")) @[scala/idu/idu.scala 166:13]
    node _io_o_src_sel1_T_3 = eq(opcode, UInt<7>("h17")) @[scala/idu/idu.scala 167:13]
    node _io_o_src_sel1_T_4 = eq(opcode, UInt<7>("h6f")) @[scala/idu/idu.scala 168:13]
    node _io_o_src_sel1_T_5 = eq(opcode, UInt<7>("h67")) @[scala/idu/idu.scala 169:13]
    node _io_o_src_sel1_T_6 = eq(opcode, UInt<7>("h3")) @[scala/idu/idu.scala 170:13]
    node _io_o_src_sel1_T_7 = eq(opcode, UInt<7>("h23")) @[scala/idu/idu.scala 171:13]
    node _io_o_src_sel1_T_8 = eq(opcode, UInt<7>("h63")) @[scala/idu/idu.scala 172:13]
    node _io_o_src_sel1_T_9 = eq(opcode, UInt<7>("h73")) @[scala/idu/idu.scala 173:13]
    node _io_o_src_sel1_T_10 = eq(func3, UInt<1>("h1")) @[scala/idu/idu.scala 173:39]
    node _io_o_src_sel1_T_11 = and(_io_o_src_sel1_T_9, _io_o_src_sel1_T_10) @[scala/idu/idu.scala 173:30]
    node _io_o_src_sel1_T_12 = eq(opcode, UInt<7>("h73")) @[scala/idu/idu.scala 174:13]
    node _io_o_src_sel1_T_13 = eq(func3, UInt<2>("h2")) @[scala/idu/idu.scala 174:39]
    node _io_o_src_sel1_T_14 = and(_io_o_src_sel1_T_12, _io_o_src_sel1_T_13) @[scala/idu/idu.scala 174:30]
    node _io_o_src_sel1_T_15 = mux(_io_o_src_sel1_T_14, UInt<2>("h1"), UInt<2>("h0")) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_src_sel1_T_16 = mux(_io_o_src_sel1_T_11, UInt<2>("h1"), _io_o_src_sel1_T_15) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_src_sel1_T_17 = mux(_io_o_src_sel1_T_8, UInt<2>("h1"), _io_o_src_sel1_T_16) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_src_sel1_T_18 = mux(_io_o_src_sel1_T_7, UInt<2>("h1"), _io_o_src_sel1_T_17) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_src_sel1_T_19 = mux(_io_o_src_sel1_T_6, UInt<2>("h1"), _io_o_src_sel1_T_18) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_src_sel1_T_20 = mux(_io_o_src_sel1_T_5, UInt<2>("h2"), _io_o_src_sel1_T_19) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_src_sel1_T_21 = mux(_io_o_src_sel1_T_4, UInt<2>("h2"), _io_o_src_sel1_T_20) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_src_sel1_T_22 = mux(_io_o_src_sel1_T_3, UInt<2>("h2"), _io_o_src_sel1_T_21) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_src_sel1_T_23 = mux(_io_o_src_sel1_T_2, UInt<2>("h1"), _io_o_src_sel1_T_22) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_src_sel1_T_24 = mux(_io_o_src_sel1_T_1, UInt<2>("h1"), _io_o_src_sel1_T_23) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_src_sel1_T_25 = mux(_io_o_src_sel1_T, UInt<2>("h1"), _io_o_src_sel1_T_24) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    io.o_src_sel1 <= _io_o_src_sel1_T_25 @[scala/idu/idu.scala 163:17]
    node _io_o_src_sel2_T = eq(opcode, UInt<7>("h13")) @[scala/idu/idu.scala 179:13]
    node _io_o_src_sel2_T_1 = eq(opcode, UInt<7>("h33")) @[scala/idu/idu.scala 180:13]
    node _io_o_src_sel2_T_2 = eq(opcode, UInt<7>("h37")) @[scala/idu/idu.scala 181:13]
    node _io_o_src_sel2_T_3 = eq(opcode, UInt<7>("h17")) @[scala/idu/idu.scala 182:13]
    node _io_o_src_sel2_T_4 = eq(opcode, UInt<7>("h6f")) @[scala/idu/idu.scala 183:13]
    node _io_o_src_sel2_T_5 = eq(opcode, UInt<7>("h67")) @[scala/idu/idu.scala 184:13]
    node _io_o_src_sel2_T_6 = eq(opcode, UInt<7>("h3")) @[scala/idu/idu.scala 185:13]
    node _io_o_src_sel2_T_7 = eq(opcode, UInt<7>("h23")) @[scala/idu/idu.scala 186:13]
    node _io_o_src_sel2_T_8 = eq(opcode, UInt<7>("h63")) @[scala/idu/idu.scala 187:13]
    node _io_o_src_sel2_T_9 = eq(opcode, UInt<7>("h73")) @[scala/idu/idu.scala 188:13]
    node _io_o_src_sel2_T_10 = eq(func3, UInt<1>("h1")) @[scala/idu/idu.scala 188:39]
    node _io_o_src_sel2_T_11 = and(_io_o_src_sel2_T_9, _io_o_src_sel2_T_10) @[scala/idu/idu.scala 188:30]
    node _io_o_src_sel2_T_12 = eq(opcode, UInt<7>("h73")) @[scala/idu/idu.scala 189:13]
    node _io_o_src_sel2_T_13 = eq(func3, UInt<2>("h2")) @[scala/idu/idu.scala 189:39]
    node _io_o_src_sel2_T_14 = and(_io_o_src_sel2_T_12, _io_o_src_sel2_T_13) @[scala/idu/idu.scala 189:30]
    node _io_o_src_sel2_T_15 = mux(_io_o_src_sel2_T_14, UInt<3>("h1"), UInt<3>("h0")) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_src_sel2_T_16 = mux(_io_o_src_sel2_T_11, UInt<3>("h2"), _io_o_src_sel2_T_15) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_src_sel2_T_17 = mux(_io_o_src_sel2_T_8, UInt<3>("h1"), _io_o_src_sel2_T_16) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_src_sel2_T_18 = mux(_io_o_src_sel2_T_7, UInt<3>("h2"), _io_o_src_sel2_T_17) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_src_sel2_T_19 = mux(_io_o_src_sel2_T_6, UInt<3>("h2"), _io_o_src_sel2_T_18) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_src_sel2_T_20 = mux(_io_o_src_sel2_T_5, UInt<3>("h4"), _io_o_src_sel2_T_19) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_src_sel2_T_21 = mux(_io_o_src_sel2_T_4, UInt<3>("h4"), _io_o_src_sel2_T_20) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_src_sel2_T_22 = mux(_io_o_src_sel2_T_3, UInt<3>("h2"), _io_o_src_sel2_T_21) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_src_sel2_T_23 = mux(_io_o_src_sel2_T_2, UInt<3>("h2"), _io_o_src_sel2_T_22) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_src_sel2_T_24 = mux(_io_o_src_sel2_T_1, UInt<3>("h1"), _io_o_src_sel2_T_23) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_src_sel2_T_25 = mux(_io_o_src_sel2_T, UInt<3>("h2"), _io_o_src_sel2_T_24) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    io.o_src_sel2 <= _io_o_src_sel2_T_25 @[scala/idu/idu.scala 178:17]
    node _io_o_ecall_T = eq(opcode, UInt<7>("h73")) @[scala/idu/idu.scala 193:25]
    node _io_o_ecall_T_1 = eq(func3, UInt<1>("h0")) @[scala/idu/idu.scala 193:50]
    node _io_o_ecall_T_2 = and(_io_o_ecall_T, _io_o_ecall_T_1) @[scala/idu/idu.scala 193:40]
    node _io_o_ecall_T_3 = bits(rs2, 1, 0) @[scala/idu/idu.scala 193:71]
    node _io_o_ecall_T_4 = eq(_io_o_ecall_T_3, UInt<1>("h0")) @[scala/idu/idu.scala 193:78]
    node _io_o_ecall_T_5 = and(_io_o_ecall_T_2, _io_o_ecall_T_4) @[scala/idu/idu.scala 193:64]
    io.o_ecall <= _io_o_ecall_T_5 @[scala/idu/idu.scala 193:14]
    node _io_o_mret_T = eq(opcode, UInt<7>("h73")) @[scala/idu/idu.scala 194:25]
    node _io_o_mret_T_1 = eq(func3, UInt<1>("h0")) @[scala/idu/idu.scala 194:50]
    node _io_o_mret_T_2 = and(_io_o_mret_T, _io_o_mret_T_1) @[scala/idu/idu.scala 194:40]
    node _io_o_mret_T_3 = bits(rs2, 1, 0) @[scala/idu/idu.scala 194:71]
    node _io_o_mret_T_4 = eq(_io_o_mret_T_3, UInt<2>("h2")) @[scala/idu/idu.scala 194:78]
    node _io_o_mret_T_5 = and(_io_o_mret_T_2, _io_o_mret_T_4) @[scala/idu/idu.scala 194:64]
    io.o_mret <= _io_o_mret_T_5 @[scala/idu/idu.scala 194:14]
    node _io_o_load_T = eq(opcode, UInt<7>("h3")) @[scala/idu/idu.scala 197:25]
    io.o_load <= _io_o_load_T @[scala/idu/idu.scala 197:14]
    node _io_o_store_T = eq(opcode, UInt<7>("h23")) @[scala/idu/idu.scala 198:25]
    io.o_store <= _io_o_store_T @[scala/idu/idu.scala 198:14]
    node _io_o_brch_T = eq(opcode, UInt<7>("h63")) @[scala/idu/idu.scala 199:25]
    io.o_brch <= _io_o_brch_T @[scala/idu/idu.scala 199:14]
    node _io_o_jal_T = eq(opcode, UInt<7>("h6f")) @[scala/idu/idu.scala 200:25]
    io.o_jal <= _io_o_jal_T @[scala/idu/idu.scala 200:14]
    node _io_o_jalr_T = eq(opcode, UInt<7>("h67")) @[scala/idu/idu.scala 201:25]
    io.o_jalr <= _io_o_jalr_T @[scala/idu/idu.scala 201:14]
    node _io_o_fence_i_T = eq(opcode, UInt<7>("hf")) @[scala/idu/idu.scala 204:27]
    node _io_o_fence_i_T_1 = eq(func3, UInt<1>("h1")) @[scala/idu/idu.scala 204:53]
    node _io_o_fence_i_T_2 = and(_io_o_fence_i_T, _io_o_fence_i_T_1) @[scala/idu/idu.scala 204:43]
    io.o_fence_i <= _io_o_fence_i_T_2 @[scala/idu/idu.scala 204:16]
    node _io_o_ebreak_T = eq(opcode, UInt<7>("h73")) @[scala/idu/idu.scala 205:28]
    node _io_o_ebreak_T_1 = eq(func3, UInt<1>("h0")) @[scala/idu/idu.scala 205:53]
    node _io_o_ebreak_T_2 = and(_io_o_ebreak_T, _io_o_ebreak_T_1) @[scala/idu/idu.scala 205:43]
    node _io_o_ebreak_T_3 = bits(rs2, 1, 0) @[scala/idu/idu.scala 205:74]
    node _io_o_ebreak_T_4 = eq(_io_o_ebreak_T_3, UInt<1>("h1")) @[scala/idu/idu.scala 205:81]
    node _io_o_ebreak_T_5 = and(_io_o_ebreak_T_2, _io_o_ebreak_T_4) @[scala/idu/idu.scala 205:67]
    io.o_ebreak <= _io_o_ebreak_T_5 @[scala/idu/idu.scala 205:17]

  module IDU_EXU_Regs :
    input clock : Clock
    input reset : Reset
    output io : { flip i_pc : UInt<32>, flip i_pre_valid : UInt<1>, flip i_post_ready : UInt<1>, flip i_imm : UInt<32>, flip i_csr_addr : UInt<12>, flip i_src1 : UInt<32>, flip i_src2 : UInt<32>, flip i_rd : UInt<4>, flip i_csr_rs2 : UInt<32>, flip i_csr_src_sel : UInt<1>, flip i_mepc : UInt<32>, flip i_mtvec : UInt<32>, flip i_exu_opt : UInt<3>, flip i_alu_opt : UInt<10>, flip i_wen : UInt<1>, flip i_csr_wen : UInt<1>, flip i_src_sel1 : UInt<2>, flip i_src_sel2 : UInt<3>, flip i_mret : UInt<1>, flip i_ecall : UInt<1>, flip i_load : UInt<1>, flip i_store : UInt<1>, flip i_brch : UInt<1>, flip i_jal : UInt<1>, flip i_jalr : UInt<1>, flip i_fence_i : UInt<1>, flip i_ebreak : UInt<1>, out : { pc : UInt<32>, src1 : UInt<32>, src2 : UInt<32>, imm : UInt<32>, src_sel1 : UInt<2>, src_sel2 : UInt<3>, rd : UInt<4>, exu_opt : UInt<3>, alu_opt : UInt<10>, wen : UInt<1>, csr_wen : UInt<1>, mret : UInt<1>, ecall : UInt<1>, load : UInt<1>, store : UInt<1>, brch : UInt<1>, jal : UInt<1>, jalr : UInt<1>, fence_i : UInt<1>, ebreak : UInt<1>, csr_addr : UInt<12>}, pre_ready : UInt<1>, post_valid : UInt<1>} @[scala/idu/idu_exu_regs.scala 33:14]

    reg postValid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[scala/idu/idu_exu_regs.scala 70:26]
    io.post_valid <= postValid @[scala/idu/idu_exu_regs.scala 72:17]
    io.pre_ready <= io.i_post_ready @[scala/idu/idu_exu_regs.scala 73:17]
    wire selSrc1 : UInt<32> @[scala/idu/idu_exu_regs.scala 75:21]
    wire selSrc2 : UInt<32> @[scala/idu/idu_exu_regs.scala 76:21]
    node _selSrc1_T = mux(io.i_mret, io.i_mepc, io.i_src1) @[scala/idu/idu_exu_regs.scala 78:45]
    node _selSrc1_T_1 = mux(io.i_ecall, io.i_mtvec, _selSrc1_T) @[scala/idu/idu_exu_regs.scala 78:17]
    selSrc1 <= _selSrc1_T_1 @[scala/idu/idu_exu_regs.scala 78:11]
    node _selSrc2_T = mux(io.i_csr_src_sel, io.i_csr_rs2, io.i_src2) @[scala/idu/idu_exu_regs.scala 79:17]
    selSrc2 <= _selSrc2_T @[scala/idu/idu_exu_regs.scala 79:11]
    when io.i_pre_valid : @[scala/idu/idu_exu_regs.scala 81:24]
      postValid <= UInt<1>("h1") @[scala/idu/idu_exu_regs.scala 82:15]
    else :
      node _T = eq(io.i_pre_valid, UInt<1>("h0")) @[scala/idu/idu_exu_regs.scala 83:14]
      node _T_1 = and(_T, io.i_post_ready) @[scala/idu/idu_exu_regs.scala 83:30]
      node _T_2 = and(_T_1, io.post_valid) @[scala/idu/idu_exu_regs.scala 83:49]
      when _T_2 : @[scala/idu/idu_exu_regs.scala 83:67]
        postValid <= UInt<1>("h0") @[scala/idu/idu_exu_regs.scala 84:15]
    wire _out_reg_WIRE : { pc : UInt<32>, src1 : UInt<32>, src2 : UInt<32>, imm : UInt<32>, src_sel1 : UInt<2>, src_sel2 : UInt<3>, rd : UInt<4>, exu_opt : UInt<3>, alu_opt : UInt<10>, wen : UInt<1>, csr_wen : UInt<1>, mret : UInt<1>, ecall : UInt<1>, load : UInt<1>, store : UInt<1>, brch : UInt<1>, jal : UInt<1>, jalr : UInt<1>, fence_i : UInt<1>, ebreak : UInt<1>, csr_addr : UInt<12>} @[scala/idu/idu_exu_regs.scala 87:37]
    _out_reg_WIRE.csr_addr <= UInt<12>("h0") @[scala/idu/idu_exu_regs.scala 87:37]
    _out_reg_WIRE.ebreak <= UInt<1>("h0") @[scala/idu/idu_exu_regs.scala 87:37]
    _out_reg_WIRE.fence_i <= UInt<1>("h0") @[scala/idu/idu_exu_regs.scala 87:37]
    _out_reg_WIRE.jalr <= UInt<1>("h0") @[scala/idu/idu_exu_regs.scala 87:37]
    _out_reg_WIRE.jal <= UInt<1>("h0") @[scala/idu/idu_exu_regs.scala 87:37]
    _out_reg_WIRE.brch <= UInt<1>("h0") @[scala/idu/idu_exu_regs.scala 87:37]
    _out_reg_WIRE.store <= UInt<1>("h0") @[scala/idu/idu_exu_regs.scala 87:37]
    _out_reg_WIRE.load <= UInt<1>("h0") @[scala/idu/idu_exu_regs.scala 87:37]
    _out_reg_WIRE.ecall <= UInt<1>("h0") @[scala/idu/idu_exu_regs.scala 87:37]
    _out_reg_WIRE.mret <= UInt<1>("h0") @[scala/idu/idu_exu_regs.scala 87:37]
    _out_reg_WIRE.csr_wen <= UInt<1>("h0") @[scala/idu/idu_exu_regs.scala 87:37]
    _out_reg_WIRE.wen <= UInt<1>("h0") @[scala/idu/idu_exu_regs.scala 87:37]
    _out_reg_WIRE.alu_opt <= UInt<10>("h0") @[scala/idu/idu_exu_regs.scala 87:37]
    _out_reg_WIRE.exu_opt <= UInt<3>("h0") @[scala/idu/idu_exu_regs.scala 87:37]
    _out_reg_WIRE.rd <= UInt<4>("h0") @[scala/idu/idu_exu_regs.scala 87:37]
    _out_reg_WIRE.src_sel2 <= UInt<3>("h0") @[scala/idu/idu_exu_regs.scala 87:37]
    _out_reg_WIRE.src_sel1 <= UInt<2>("h0") @[scala/idu/idu_exu_regs.scala 87:37]
    _out_reg_WIRE.imm <= UInt<32>("h0") @[scala/idu/idu_exu_regs.scala 87:37]
    _out_reg_WIRE.src2 <= UInt<32>("h0") @[scala/idu/idu_exu_regs.scala 87:37]
    _out_reg_WIRE.src1 <= UInt<32>("h0") @[scala/idu/idu_exu_regs.scala 87:37]
    _out_reg_WIRE.pc <= UInt<32>("h0") @[scala/idu/idu_exu_regs.scala 87:37]
    reg out_reg : { pc : UInt<32>, src1 : UInt<32>, src2 : UInt<32>, imm : UInt<32>, src_sel1 : UInt<2>, src_sel2 : UInt<3>, rd : UInt<4>, exu_opt : UInt<3>, alu_opt : UInt<10>, wen : UInt<1>, csr_wen : UInt<1>, mret : UInt<1>, ecall : UInt<1>, load : UInt<1>, store : UInt<1>, brch : UInt<1>, jal : UInt<1>, jalr : UInt<1>, fence_i : UInt<1>, ebreak : UInt<1>, csr_addr : UInt<12>}, clock with :
      reset => (reset, _out_reg_WIRE) @[scala/idu/idu_exu_regs.scala 87:24]
    node _T_3 = and(io.i_post_ready, io.post_valid) @[scala/idu/idu_exu_regs.scala 89:24]
    when _T_3 : @[scala/idu/idu_exu_regs.scala 89:42]
      out_reg.pc <= io.i_pc @[scala/idu/idu_exu_regs.scala 90:16]
      out_reg.src1 <= selSrc1 @[scala/idu/idu_exu_regs.scala 91:18]
      out_reg.src2 <= selSrc2 @[scala/idu/idu_exu_regs.scala 92:18]
      out_reg.imm <= io.i_imm @[scala/idu/idu_exu_regs.scala 93:17]
      out_reg.src_sel1 <= io.i_src_sel1 @[scala/idu/idu_exu_regs.scala 94:22]
      out_reg.src_sel2 <= io.i_src_sel2 @[scala/idu/idu_exu_regs.scala 95:22]
      out_reg.rd <= io.i_rd @[scala/idu/idu_exu_regs.scala 96:16]
      out_reg.exu_opt <= io.i_exu_opt @[scala/idu/idu_exu_regs.scala 97:21]
      out_reg.alu_opt <= io.i_alu_opt @[scala/idu/idu_exu_regs.scala 98:21]
      out_reg.wen <= io.i_wen @[scala/idu/idu_exu_regs.scala 99:17]
      out_reg.csr_wen <= io.i_csr_wen @[scala/idu/idu_exu_regs.scala 100:21]
      out_reg.mret <= io.i_mret @[scala/idu/idu_exu_regs.scala 101:18]
      out_reg.ecall <= io.i_ecall @[scala/idu/idu_exu_regs.scala 102:19]
      out_reg.load <= io.i_load @[scala/idu/idu_exu_regs.scala 103:18]
      out_reg.store <= io.i_store @[scala/idu/idu_exu_regs.scala 104:19]
      out_reg.brch <= io.i_brch @[scala/idu/idu_exu_regs.scala 105:18]
      out_reg.jal <= io.i_jal @[scala/idu/idu_exu_regs.scala 106:17]
      out_reg.jalr <= io.i_jalr @[scala/idu/idu_exu_regs.scala 107:18]
      out_reg.ebreak <= io.i_ebreak @[scala/idu/idu_exu_regs.scala 108:20]
      out_reg.fence_i <= io.i_fence_i @[scala/idu/idu_exu_regs.scala 109:21]
      out_reg.csr_addr <= io.i_csr_addr @[scala/idu/idu_exu_regs.scala 110:22]
    else :
      node _T_4 = eq(io.post_valid, UInt<1>("h0")) @[scala/idu/idu_exu_regs.scala 111:33]
      node _T_5 = and(io.i_post_ready, _T_4) @[scala/idu/idu_exu_regs.scala 111:30]
      when _T_5 : @[scala/idu/idu_exu_regs.scala 111:49]
        wire _out_reg_WIRE_1 : { pc : UInt<32>, src1 : UInt<32>, src2 : UInt<32>, imm : UInt<32>, src_sel1 : UInt<2>, src_sel2 : UInt<3>, rd : UInt<4>, exu_opt : UInt<3>, alu_opt : UInt<10>, wen : UInt<1>, csr_wen : UInt<1>, mret : UInt<1>, ecall : UInt<1>, load : UInt<1>, store : UInt<1>, brch : UInt<1>, jal : UInt<1>, jalr : UInt<1>, fence_i : UInt<1>, ebreak : UInt<1>, csr_addr : UInt<12>} @[scala/idu/idu_exu_regs.scala 112:28]
        _out_reg_WIRE_1.csr_addr <= UInt<12>("h0") @[scala/idu/idu_exu_regs.scala 112:28]
        _out_reg_WIRE_1.ebreak <= UInt<1>("h0") @[scala/idu/idu_exu_regs.scala 112:28]
        _out_reg_WIRE_1.fence_i <= UInt<1>("h0") @[scala/idu/idu_exu_regs.scala 112:28]
        _out_reg_WIRE_1.jalr <= UInt<1>("h0") @[scala/idu/idu_exu_regs.scala 112:28]
        _out_reg_WIRE_1.jal <= UInt<1>("h0") @[scala/idu/idu_exu_regs.scala 112:28]
        _out_reg_WIRE_1.brch <= UInt<1>("h0") @[scala/idu/idu_exu_regs.scala 112:28]
        _out_reg_WIRE_1.store <= UInt<1>("h0") @[scala/idu/idu_exu_regs.scala 112:28]
        _out_reg_WIRE_1.load <= UInt<1>("h0") @[scala/idu/idu_exu_regs.scala 112:28]
        _out_reg_WIRE_1.ecall <= UInt<1>("h0") @[scala/idu/idu_exu_regs.scala 112:28]
        _out_reg_WIRE_1.mret <= UInt<1>("h0") @[scala/idu/idu_exu_regs.scala 112:28]
        _out_reg_WIRE_1.csr_wen <= UInt<1>("h0") @[scala/idu/idu_exu_regs.scala 112:28]
        _out_reg_WIRE_1.wen <= UInt<1>("h0") @[scala/idu/idu_exu_regs.scala 112:28]
        _out_reg_WIRE_1.alu_opt <= UInt<10>("h0") @[scala/idu/idu_exu_regs.scala 112:28]
        _out_reg_WIRE_1.exu_opt <= UInt<3>("h0") @[scala/idu/idu_exu_regs.scala 112:28]
        _out_reg_WIRE_1.rd <= UInt<4>("h0") @[scala/idu/idu_exu_regs.scala 112:28]
        _out_reg_WIRE_1.src_sel2 <= UInt<3>("h0") @[scala/idu/idu_exu_regs.scala 112:28]
        _out_reg_WIRE_1.src_sel1 <= UInt<2>("h0") @[scala/idu/idu_exu_regs.scala 112:28]
        _out_reg_WIRE_1.imm <= UInt<32>("h0") @[scala/idu/idu_exu_regs.scala 112:28]
        _out_reg_WIRE_1.src2 <= UInt<32>("h0") @[scala/idu/idu_exu_regs.scala 112:28]
        _out_reg_WIRE_1.src1 <= UInt<32>("h0") @[scala/idu/idu_exu_regs.scala 112:28]
        _out_reg_WIRE_1.pc <= UInt<32>("h0") @[scala/idu/idu_exu_regs.scala 112:28]
        out_reg <= _out_reg_WIRE_1 @[scala/idu/idu_exu_regs.scala 112:13]
    io.out <= out_reg @[scala/idu/idu_exu_regs.scala 115:10]

  module ALU :
    input clock : Clock
    input reset : Reset
    output io : { flip src1 : UInt<32>, flip src2 : UInt<32>, flip opt : UInt<10>, res : UInt<32>} @[scala/exu/ALU.scala 8:14]

    node _addRes_T = asSInt(io.src1) @[scala/exu/ALU.scala 16:26]
    node _addRes_T_1 = asSInt(io.src2) @[scala/exu/ALU.scala 16:43]
    node _addRes_T_2 = add(_addRes_T, _addRes_T_1) @[scala/exu/ALU.scala 16:33]
    node _addRes_T_3 = tail(_addRes_T_2, 1) @[scala/exu/ALU.scala 16:33]
    node _addRes_T_4 = asSInt(_addRes_T_3) @[scala/exu/ALU.scala 16:33]
    node addRes = asUInt(_addRes_T_4) @[scala/exu/ALU.scala 16:51]
    node _subRes_T = asSInt(io.src1) @[scala/exu/ALU.scala 17:26]
    node _subRes_T_1 = asSInt(io.src2) @[scala/exu/ALU.scala 17:43]
    node _subRes_T_2 = sub(_subRes_T, _subRes_T_1) @[scala/exu/ALU.scala 17:33]
    node _subRes_T_3 = tail(_subRes_T_2, 1) @[scala/exu/ALU.scala 17:33]
    node _subRes_T_4 = asSInt(_subRes_T_3) @[scala/exu/ALU.scala 17:33]
    node subRes = asUInt(_subRes_T_4) @[scala/exu/ALU.scala 17:51]
    node andRes = and(io.src1, io.src2) @[scala/exu/ALU.scala 18:25]
    node orRes = or(io.src1, io.src2) @[scala/exu/ALU.scala 19:25]
    node xorRes = xor(io.src1, io.src2) @[scala/exu/ALU.scala 20:25]
    node _sllRes_T = bits(io.src2, 4, 0) @[scala/exu/ALU.scala 21:35]
    node sllRes = dshl(io.src1, _sllRes_T) @[scala/exu/ALU.scala 21:25]
    node _srlRes_T = bits(io.src2, 4, 0) @[scala/exu/ALU.scala 22:35]
    node srlRes = dshr(io.src1, _srlRes_T) @[scala/exu/ALU.scala 22:25]
    node _sraRes_T = asSInt(io.src1) @[scala/exu/ALU.scala 23:26]
    node _sraRes_T_1 = bits(io.src2, 4, 0) @[scala/exu/ALU.scala 23:43]
    node _sraRes_T_2 = dshr(_sraRes_T, _sraRes_T_1) @[scala/exu/ALU.scala 23:33]
    node sraRes = asUInt(_sraRes_T_2) @[scala/exu/ALU.scala 23:80]
    node _sltRes_T = asSInt(io.src1) @[scala/exu/ALU.scala 24:29]
    node _sltRes_T_1 = asSInt(io.src2) @[scala/exu/ALU.scala 24:46]
    node _sltRes_T_2 = lt(_sltRes_T, _sltRes_T_1) @[scala/exu/ALU.scala 24:36]
    node sltRes = mux(_sltRes_T_2, UInt<1>("h1"), UInt<1>("h0")) @[scala/exu/ALU.scala 24:20]
    node _sltuRes_T = lt(io.src1, io.src2) @[scala/exu/ALU.scala 25:29]
    node sltuRes = mux(_sltuRes_T, UInt<1>("h1"), UInt<1>("h0")) @[scala/exu/ALU.scala 25:20]
    node opAdd = bits(io.opt, 0, 0) @[scala/exu/ALU.scala 28:22]
    node opSub = bits(io.opt, 1, 1) @[scala/exu/ALU.scala 29:22]
    node opSll = bits(io.opt, 2, 2) @[scala/exu/ALU.scala 30:22]
    node opSlt = bits(io.opt, 3, 3) @[scala/exu/ALU.scala 31:22]
    node opSltu = bits(io.opt, 4, 4) @[scala/exu/ALU.scala 32:22]
    node opXor = bits(io.opt, 5, 5) @[scala/exu/ALU.scala 33:22]
    node opSrl = bits(io.opt, 6, 6) @[scala/exu/ALU.scala 34:22]
    node opOr = bits(io.opt, 7, 7) @[scala/exu/ALU.scala 35:22]
    node opAnd = bits(io.opt, 8, 8) @[scala/exu/ALU.scala 36:22]
    node opSra = bits(io.opt, 9, 9) @[scala/exu/ALU.scala 37:22]
    node _io_res_T = mux(opSra, sraRes, UInt<1>("h0")) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_res_T_1 = mux(opSrl, srlRes, _io_res_T) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_res_T_2 = mux(opSll, sllRes, _io_res_T_1) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_res_T_3 = mux(opXor, xorRes, _io_res_T_2) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_res_T_4 = mux(opOr, orRes, _io_res_T_3) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_res_T_5 = mux(opAnd, andRes, _io_res_T_4) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_res_T_6 = mux(opSltu, sltuRes, _io_res_T_5) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_res_T_7 = mux(opSlt, sltRes, _io_res_T_6) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_res_T_8 = mux(opSub, subRes, _io_res_T_7) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_res_T_9 = mux(opAdd, addRes, _io_res_T_8) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    io.res <= _io_res_T_9 @[scala/exu/ALU.scala 40:10]

  module LSU :
    input clock : Clock
    input reset : Reset
    output io : { flip storeSrc : UInt<32>, flip aluRes : UInt<32>, flip exuOpt : UInt<3>, loadRes : UInt<32>, flip i_load : UInt<1>, flip i_store : UInt<1>, M_axi : { AXI_AWADDR : UInt<32>, AXI_AWVALID : UInt<1>, flip AXI_AWREADY : UInt<1>, AXI_AWLEN : UInt<8>, AXI_AWSIZE : UInt<3>, AXI_AWBURST : UInt<2>, AXI_AWID : UInt<4>, AXI_WVALID : UInt<1>, flip AXI_WREADY : UInt<1>, AXI_WDATA : UInt<32>, AXI_WSTRB : UInt<4>, AXI_WLAST : UInt<1>, flip AXI_RDATA : UInt<32>, flip AXI_RRESP : UInt<2>, flip AXI_RVALID : UInt<1>, AXI_RREADY : UInt<1>, flip AXI_RID : UInt<4>, flip AXI_RLAST : UInt<1>, AXI_ARADDR : UInt<32>, AXI_ARVALID : UInt<1>, flip AXI_ARREADY : UInt<1>, AXI_ARID : UInt<4>, AXI_ARLEN : UInt<8>, AXI_ARSIZE : UInt<3>, AXI_ARBURST : UInt<2>, flip AXI_BRESP : UInt<2>, flip AXI_BVALID : UInt<1>, AXI_BREADY : UInt<1>, flip AXI_BID : UInt<4>}, flip oPreReady : UInt<1>, flip iPreValid : UInt<1>} @[scala/exu/lsu.scala 10:14]

    wire shift8 : UInt<5> @[scala/exu/lsu.scala 37:21]
    reg shift : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[scala/exu/lsu.scala 38:24]
    node _shift_T = bits(io.aluRes, 1, 0) @[scala/exu/lsu.scala 39:21]
    shift <= _shift_T @[scala/exu/lsu.scala 39:9]
    node _shift8_T = dshl(shift, UInt<2>("h3")) @[scala/exu/lsu.scala 40:19]
    shift8 <= _shift8_T @[scala/exu/lsu.scala 40:10]
    reg axi_awvalid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[scala/exu/lsu.scala 43:28]
    reg axi_wvalid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[scala/exu/lsu.scala 44:27]
    reg axi_arvalid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[scala/exu/lsu.scala 45:28]
    reg axi_rready : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[scala/exu/lsu.scala 46:27]
    reg axi_bready : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[scala/exu/lsu.scala 47:27]
    reg axi_axaddr : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[scala/exu/lsu.scala 48:27]
    io.M_axi.AXI_AWADDR <= axi_axaddr @[scala/exu/lsu.scala 50:23]
    node _io_M_axi_AXI_WDATA_T = dshl(io.storeSrc, shift8) @[scala/exu/lsu.scala 51:37]
    io.M_axi.AXI_WDATA <= _io_M_axi_AXI_WDATA_T @[scala/exu/lsu.scala 51:22]
    io.M_axi.AXI_AWVALID <= axi_awvalid @[scala/exu/lsu.scala 52:24]
    io.M_axi.AXI_AWLEN <= UInt<1>("h0") @[scala/exu/lsu.scala 53:22]
    node _io_M_axi_AXI_AWSIZE_T = eq(UInt<2>("h2"), io.exuOpt) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _io_M_axi_AXI_AWSIZE_T_1 = mux(_io_M_axi_AXI_AWSIZE_T, UInt<2>("h2"), UInt<2>("h2")) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _io_M_axi_AXI_AWSIZE_T_2 = eq(UInt<1>("h1"), io.exuOpt) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _io_M_axi_AXI_AWSIZE_T_3 = mux(_io_M_axi_AXI_AWSIZE_T_2, UInt<1>("h1"), _io_M_axi_AXI_AWSIZE_T_1) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _io_M_axi_AXI_AWSIZE_T_4 = eq(UInt<1>("h0"), io.exuOpt) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _io_M_axi_AXI_AWSIZE_T_5 = mux(_io_M_axi_AXI_AWSIZE_T_4, UInt<1>("h0"), _io_M_axi_AXI_AWSIZE_T_3) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    io.M_axi.AXI_AWSIZE <= _io_M_axi_AXI_AWSIZE_T_5 @[scala/exu/lsu.scala 54:23]
    io.M_axi.AXI_AWID <= UInt<1>("h0") @[scala/exu/lsu.scala 59:21]
    io.M_axi.AXI_AWBURST <= UInt<1>("h0") @[scala/exu/lsu.scala 60:24]
    io.M_axi.AXI_WVALID <= axi_wvalid @[scala/exu/lsu.scala 62:23]
    node _io_M_axi_AXI_WSTRB_T = eq(UInt<1>("h0"), io.exuOpt) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _io_M_axi_AXI_WSTRB_T_1 = mux(_io_M_axi_AXI_WSTRB_T, UInt<1>("h1"), UInt<1>("h0")) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _io_M_axi_AXI_WSTRB_T_2 = eq(UInt<1>("h1"), io.exuOpt) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _io_M_axi_AXI_WSTRB_T_3 = mux(_io_M_axi_AXI_WSTRB_T_2, UInt<2>("h3"), _io_M_axi_AXI_WSTRB_T_1) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _io_M_axi_AXI_WSTRB_T_4 = eq(UInt<2>("h2"), io.exuOpt) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _io_M_axi_AXI_WSTRB_T_5 = mux(_io_M_axi_AXI_WSTRB_T_4, UInt<4>("hf"), _io_M_axi_AXI_WSTRB_T_3) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _io_M_axi_AXI_WSTRB_T_6 = dshl(_io_M_axi_AXI_WSTRB_T_5, shift) @[scala/exu/lsu.scala 67:6]
    io.M_axi.AXI_WSTRB <= _io_M_axi_AXI_WSTRB_T_6 @[scala/exu/lsu.scala 63:22]
    io.M_axi.AXI_WLAST <= UInt<1>("h1") @[scala/exu/lsu.scala 68:22]
    io.M_axi.AXI_BREADY <= axi_bready @[scala/exu/lsu.scala 69:23]
    io.M_axi.AXI_ARADDR <= axi_axaddr @[scala/exu/lsu.scala 71:23]
    io.M_axi.AXI_ARVALID <= axi_arvalid @[scala/exu/lsu.scala 72:24]
    io.M_axi.AXI_ARLEN <= UInt<1>("h0") @[scala/exu/lsu.scala 73:22]
    node _io_M_axi_AXI_ARSIZE_T = bits(io.exuOpt, 1, 0) @[scala/exu/lsu.scala 74:45]
    node _io_M_axi_AXI_ARSIZE_T_1 = eq(UInt<2>("h2"), _io_M_axi_AXI_ARSIZE_T) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _io_M_axi_AXI_ARSIZE_T_2 = mux(_io_M_axi_AXI_ARSIZE_T_1, UInt<2>("h2"), UInt<2>("h2")) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _io_M_axi_AXI_ARSIZE_T_3 = eq(UInt<1>("h1"), _io_M_axi_AXI_ARSIZE_T) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _io_M_axi_AXI_ARSIZE_T_4 = mux(_io_M_axi_AXI_ARSIZE_T_3, UInt<1>("h1"), _io_M_axi_AXI_ARSIZE_T_2) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _io_M_axi_AXI_ARSIZE_T_5 = eq(UInt<1>("h0"), _io_M_axi_AXI_ARSIZE_T) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _io_M_axi_AXI_ARSIZE_T_6 = mux(_io_M_axi_AXI_ARSIZE_T_5, UInt<1>("h0"), _io_M_axi_AXI_ARSIZE_T_4) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    io.M_axi.AXI_ARSIZE <= _io_M_axi_AXI_ARSIZE_T_6 @[scala/exu/lsu.scala 74:23]
    io.M_axi.AXI_ARBURST <= UInt<1>("h0") @[scala/exu/lsu.scala 79:24]
    io.M_axi.AXI_ARID <= UInt<1>("h0") @[scala/exu/lsu.scala 80:21]
    io.M_axi.AXI_RREADY <= axi_rready @[scala/exu/lsu.scala 81:23]
    reg init_txn_ff2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[scala/exu/lsu.scala 85:31]
    reg init_txn_ff : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[scala/exu/lsu.scala 86:31]
    reg o_pre_ready_d1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[scala/exu/lsu.scala 88:31]
    o_pre_ready_d1 <= io.oPreReady @[scala/exu/lsu.scala 89:18]
    node is_ls = or(io.i_load, io.i_store) @[scala/exu/lsu.scala 91:26]
    node _init_txn_pulse_T = asUInt(reset) @[scala/exu/lsu.scala 92:34]
    node _init_txn_pulse_T_1 = eq(init_txn_ff2, UInt<1>("h0")) @[scala/exu/lsu.scala 92:48]
    node _init_txn_pulse_T_2 = and(_init_txn_pulse_T_1, init_txn_ff) @[scala/exu/lsu.scala 92:63]
    node init_txn_pulse = mux(_init_txn_pulse_T, UInt<1>("h0"), _init_txn_pulse_T_2) @[scala/exu/lsu.scala 92:27]
    node _INIT_AXI_TXN_T = asUInt(reset) @[scala/exu/lsu.scala 93:34]
    node _INIT_AXI_TXN_T_1 = and(o_pre_ready_d1, is_ls) @[scala/exu/lsu.scala 93:66]
    node _INIT_AXI_TXN_T_2 = mux(_INIT_AXI_TXN_T_1, UInt<1>("h1"), UInt<1>("h0")) @[scala/exu/lsu.scala 93:50]
    node INIT_AXI_TXN = mux(_INIT_AXI_TXN_T, UInt<1>("h0"), _INIT_AXI_TXN_T_2) @[scala/exu/lsu.scala 93:27]
    node txn_pulse_load = and(io.i_load, init_txn_pulse) @[scala/exu/lsu.scala 94:37]
    node txn_pulse_store = and(io.i_store, init_txn_pulse) @[scala/exu/lsu.scala 95:37]
    init_txn_ff <= INIT_AXI_TXN @[scala/exu/lsu.scala 97:15]
    init_txn_ff2 <= init_txn_ff @[scala/exu/lsu.scala 98:16]
    axi_axaddr <= io.aluRes @[scala/exu/lsu.scala 99:14]
    node _shift_T_1 = bits(io.aluRes, 1, 0) @[scala/exu/lsu.scala 100:21]
    shift <= _shift_T_1 @[scala/exu/lsu.scala 100:9]
    node _T = bits(txn_pulse_store, 0, 0) @[scala/exu/lsu.scala 102:24]
    when _T : @[scala/exu/lsu.scala 102:32]
      axi_awvalid <= UInt<1>("h1") @[scala/exu/lsu.scala 103:17]
    else :
      node _T_1 = and(io.M_axi.AXI_AWREADY, axi_awvalid) @[scala/exu/lsu.scala 104:35]
      when _T_1 : @[scala/exu/lsu.scala 104:51]
        axi_awvalid <= UInt<1>("h0") @[scala/exu/lsu.scala 105:17]
    node _T_2 = bits(txn_pulse_store, 0, 0) @[scala/exu/lsu.scala 108:24]
    when _T_2 : @[scala/exu/lsu.scala 108:32]
      axi_wvalid <= UInt<1>("h1") @[scala/exu/lsu.scala 109:16]
    else :
      node _T_3 = and(io.M_axi.AXI_WREADY, axi_wvalid) @[scala/exu/lsu.scala 110:34]
      when _T_3 : @[scala/exu/lsu.scala 110:49]
        axi_wvalid <= UInt<1>("h0") @[scala/exu/lsu.scala 111:16]
    node _T_4 = eq(axi_bready, UInt<1>("h0")) @[scala/exu/lsu.scala 114:31]
    node _T_5 = and(io.M_axi.AXI_BVALID, _T_4) @[scala/exu/lsu.scala 114:28]
    when _T_5 : @[scala/exu/lsu.scala 114:44]
      axi_bready <= UInt<1>("h1") @[scala/exu/lsu.scala 115:16]
    else :
      when axi_bready : @[scala/exu/lsu.scala 116:26]
        axi_bready <= UInt<1>("h0") @[scala/exu/lsu.scala 117:16]
    node _T_6 = bits(txn_pulse_load, 0, 0) @[scala/exu/lsu.scala 120:23]
    when _T_6 : @[scala/exu/lsu.scala 120:31]
      axi_arvalid <= UInt<1>("h1") @[scala/exu/lsu.scala 121:17]
    else :
      node _T_7 = and(axi_arvalid, io.M_axi.AXI_ARREADY) @[scala/exu/lsu.scala 122:26]
      when _T_7 : @[scala/exu/lsu.scala 122:51]
        axi_arvalid <= UInt<1>("h0") @[scala/exu/lsu.scala 123:17]
    node _T_8 = eq(axi_rready, UInt<1>("h0")) @[scala/exu/lsu.scala 126:31]
    node _T_9 = and(io.M_axi.AXI_RVALID, _T_8) @[scala/exu/lsu.scala 126:28]
    when _T_9 : @[scala/exu/lsu.scala 126:44]
      axi_rready <= UInt<1>("h1") @[scala/exu/lsu.scala 127:16]
    else :
      when axi_rready : @[scala/exu/lsu.scala 128:26]
        axi_rready <= UInt<1>("h0") @[scala/exu/lsu.scala 129:16]
    node axi_rdata = dshr(io.M_axi.AXI_RDATA, shift8) @[scala/exu/lsu.scala 132:38]
    node _io_loadRes_T = bits(axi_rdata, 7, 7) @[scala/exu/lsu.scala 134:33]
    node _io_loadRes_T_1 = mux(_io_loadRes_T, UInt<24>("hffffff"), UInt<24>("h0")) @[scala/exu/lsu.scala 134:19]
    node _io_loadRes_T_2 = bits(axi_rdata, 7, 0) @[scala/exu/lsu.scala 134:48]
    node _io_loadRes_T_3 = cat(_io_loadRes_T_1, _io_loadRes_T_2) @[scala/exu/lsu.scala 134:14]
    node _io_loadRes_T_4 = bits(axi_rdata, 15, 15) @[scala/exu/lsu.scala 135:33]
    node _io_loadRes_T_5 = mux(_io_loadRes_T_4, UInt<16>("hffff"), UInt<16>("h0")) @[scala/exu/lsu.scala 135:19]
    node _io_loadRes_T_6 = bits(axi_rdata, 15, 0) @[scala/exu/lsu.scala 135:49]
    node _io_loadRes_T_7 = cat(_io_loadRes_T_5, _io_loadRes_T_6) @[scala/exu/lsu.scala 135:14]
    node _io_loadRes_T_8 = bits(axi_rdata, 7, 0) @[scala/exu/lsu.scala 137:36]
    node _io_loadRes_T_9 = cat(UInt<24>("h0"), _io_loadRes_T_8) @[scala/exu/lsu.scala 137:15]
    node _io_loadRes_T_10 = bits(axi_rdata, 15, 0) @[scala/exu/lsu.scala 138:36]
    node _io_loadRes_T_11 = cat(UInt<16>("h0"), _io_loadRes_T_10) @[scala/exu/lsu.scala 138:15]
    node _io_loadRes_T_12 = eq(UInt<1>("h0"), io.exuOpt) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _io_loadRes_T_13 = mux(_io_loadRes_T_12, _io_loadRes_T_3, UInt<1>("h0")) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _io_loadRes_T_14 = eq(UInt<1>("h1"), io.exuOpt) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _io_loadRes_T_15 = mux(_io_loadRes_T_14, _io_loadRes_T_7, _io_loadRes_T_13) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _io_loadRes_T_16 = eq(UInt<2>("h2"), io.exuOpt) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _io_loadRes_T_17 = mux(_io_loadRes_T_16, axi_rdata, _io_loadRes_T_15) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _io_loadRes_T_18 = eq(UInt<3>("h4"), io.exuOpt) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _io_loadRes_T_19 = mux(_io_loadRes_T_18, _io_loadRes_T_9, _io_loadRes_T_17) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _io_loadRes_T_20 = eq(UInt<3>("h5"), io.exuOpt) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _io_loadRes_T_21 = mux(_io_loadRes_T_20, _io_loadRes_T_11, _io_loadRes_T_19) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    io.loadRes <= _io_loadRes_T_21 @[scala/exu/lsu.scala 133:14]

  module EXU :
    input clock : Clock
    input reset : Reset
    output io : { flip i_src1 : UInt<32>, flip i_src2 : UInt<32>, flip i_pc : UInt<32>, flip i_imm : UInt<32>, flip i_src_sel1 : UInt<2>, flip i_src_sel2 : UInt<3>, flip i_load : UInt<1>, flip i_store : UInt<1>, flip i_brch : UInt<1>, flip i_jal : UInt<1>, flip i_jalr : UInt<1>, flip i_ecall : UInt<1>, flip i_mret : UInt<1>, flip i_alu_opt : UInt<10>, flip exu_opt : UInt<3>, o_res : UInt<32>, o_brch : UInt<1>, o_pc_next : UInt<32>, lsu : { AXI_AWADDR : UInt<32>, AXI_AWVALID : UInt<1>, flip AXI_AWREADY : UInt<1>, AXI_AWLEN : UInt<8>, AXI_AWSIZE : UInt<3>, AXI_AWBURST : UInt<2>, AXI_AWID : UInt<4>, AXI_WVALID : UInt<1>, flip AXI_WREADY : UInt<1>, AXI_WDATA : UInt<32>, AXI_WSTRB : UInt<4>, AXI_WLAST : UInt<1>, flip AXI_RDATA : UInt<32>, flip AXI_RRESP : UInt<2>, flip AXI_RVALID : UInt<1>, AXI_RREADY : UInt<1>, flip AXI_RID : UInt<4>, flip AXI_RLAST : UInt<1>, AXI_ARADDR : UInt<32>, AXI_ARVALID : UInt<1>, flip AXI_ARREADY : UInt<1>, AXI_ARID : UInt<4>, AXI_ARLEN : UInt<8>, AXI_ARSIZE : UInt<3>, AXI_ARBURST : UInt<2>, flip AXI_BRESP : UInt<2>, flip AXI_BVALID : UInt<1>, AXI_BREADY : UInt<1>, flip AXI_BID : UInt<4>}, flip i_post_ready : UInt<1>, flip i_pre_valid : UInt<1>, o_post_valid : UInt<1>, o_pre_ready : UInt<1>} @[scala/exu/exu.scala 10:14]

    wire aluRes : UInt<32> @[scala/exu/exu.scala 53:20]
    wire loadRes : UInt<32> @[scala/exu/exu.scala 54:21]
    node ifLsu = or(io.i_load, io.i_store) @[scala/exu/exu.scala 55:25]
    reg postValid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[scala/exu/exu.scala 57:26]
    postValid <= io.i_pre_valid @[scala/exu/exu.scala 58:13]
    node _io_o_post_valid_T = and(io.lsu.AXI_RLAST, io.lsu.AXI_RREADY) @[scala/exu/exu.scala 61:51]
    node _io_o_post_valid_T_1 = or(_io_o_post_valid_T, io.lsu.AXI_BREADY) @[scala/exu/exu.scala 61:73]
    node _io_o_post_valid_T_2 = mux(ifLsu, _io_o_post_valid_T_1, postValid) @[scala/exu/exu.scala 61:25]
    io.o_post_valid <= _io_o_post_valid_T_2 @[scala/exu/exu.scala 61:19]
    node _io_o_pre_ready_T = and(io.lsu.AXI_RLAST, io.lsu.AXI_RREADY) @[scala/exu/exu.scala 62:50]
    node _io_o_pre_ready_T_1 = or(_io_o_pre_ready_T, io.lsu.AXI_BREADY) @[scala/exu/exu.scala 62:72]
    node _io_o_pre_ready_T_2 = mux(ifLsu, _io_o_pre_ready_T_1, UInt<1>("h1")) @[scala/exu/exu.scala 62:24]
    io.o_pre_ready <= _io_o_pre_ready_T_2 @[scala/exu/exu.scala 62:18]
    wire aluSrc1 : UInt<32> @[scala/exu/exu.scala 66:21]
    wire aluSrc2 : UInt<32> @[scala/exu/exu.scala 67:21]
    node _aluSrc1_T = bits(io.i_src_sel1, 0, 0) @[scala/exu/exu.scala 69:31]
    node _aluSrc1_T_1 = mux(_aluSrc1_T, io.i_src1, io.i_pc) @[scala/exu/exu.scala 69:17]
    aluSrc1 <= _aluSrc1_T_1 @[scala/exu/exu.scala 69:11]
    node _aluSrc2_T = eq(UInt<1>("h1"), io.i_src_sel2) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _aluSrc2_T_1 = mux(_aluSrc2_T, io.i_src2, UInt<1>("h0")) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _aluSrc2_T_2 = eq(UInt<2>("h2"), io.i_src_sel2) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _aluSrc2_T_3 = mux(_aluSrc2_T_2, io.i_imm, _aluSrc2_T_1) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _aluSrc2_T_4 = eq(UInt<3>("h4"), io.i_src_sel2) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _aluSrc2_T_5 = mux(_aluSrc2_T_4, UInt<3>("h4"), _aluSrc2_T_3) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    aluSrc2 <= _aluSrc2_T_5 @[scala/exu/exu.scala 71:11]
    node _io_o_pc_next_T = add(io.i_pc, UInt<3>("h4")) @[scala/exu/exu.scala 78:35]
    node _io_o_pc_next_T_1 = tail(_io_o_pc_next_T, 1) @[scala/exu/exu.scala 78:35]
    node _io_o_pc_next_T_2 = add(io.i_pc, io.i_imm) @[scala/exu/exu.scala 79:27]
    node _io_o_pc_next_T_3 = tail(_io_o_pc_next_T_2, 1) @[scala/exu/exu.scala 79:27]
    node _io_o_pc_next_T_4 = add(io.i_src1, io.i_imm) @[scala/exu/exu.scala 80:29]
    node _io_o_pc_next_T_5 = tail(_io_o_pc_next_T_4, 1) @[scala/exu/exu.scala 80:29]
    node _io_o_pc_next_T_6 = add(io.i_pc, io.i_imm) @[scala/exu/exu.scala 81:27]
    node _io_o_pc_next_T_7 = tail(_io_o_pc_next_T_6, 1) @[scala/exu/exu.scala 81:27]
    node _io_o_pc_next_T_8 = mux(io.i_mret, io.i_src1, _io_o_pc_next_T_1) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_pc_next_T_9 = mux(io.i_ecall, io.i_src1, _io_o_pc_next_T_8) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_pc_next_T_10 = mux(io.i_brch, _io_o_pc_next_T_7, _io_o_pc_next_T_9) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_pc_next_T_11 = mux(io.i_jalr, _io_o_pc_next_T_5, _io_o_pc_next_T_10) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    node _io_o_pc_next_T_12 = mux(io.i_jal, _io_o_pc_next_T_3, _io_o_pc_next_T_11) @[src/main/scala/chisel3/util/Mux.scala 141:16]
    io.o_pc_next <= _io_o_pc_next_T_12 @[scala/exu/exu.scala 78:16]
    inst alu of ALU @[scala/exu/exu.scala 87:19]
    alu.clock <= clock
    alu.reset <= reset
    alu.io.src1 <= aluSrc1 @[scala/exu/exu.scala 88:15]
    alu.io.src2 <= aluSrc2 @[scala/exu/exu.scala 89:15]
    alu.io.opt <= io.i_alu_opt @[scala/exu/exu.scala 90:14]
    aluRes <= alu.io.res @[scala/exu/exu.scala 91:10]
    inst lsu of LSU @[scala/exu/exu.scala 94:19]
    lsu.clock <= clock
    lsu.reset <= reset
    lsu.io.storeSrc <= io.i_src2 @[scala/exu/exu.scala 95:19]
    lsu.io.aluRes <= aluRes @[scala/exu/exu.scala 96:17]
    lsu.io.exuOpt <= io.exu_opt @[scala/exu/exu.scala 97:17]
    lsu.io.i_load <= io.i_load @[scala/exu/exu.scala 98:17]
    lsu.io.i_store <= io.i_store @[scala/exu/exu.scala 99:18]
    lsu.io.iPreValid <= io.i_pre_valid @[scala/exu/exu.scala 100:20]
    lsu.io.oPreReady <= io.o_pre_ready @[scala/exu/exu.scala 101:20]
    lsu.io.M_axi.AXI_BID <= io.lsu.AXI_BID @[scala/exu/exu.scala 103:10]
    io.lsu.AXI_BREADY <= lsu.io.M_axi.AXI_BREADY @[scala/exu/exu.scala 103:10]
    lsu.io.M_axi.AXI_BVALID <= io.lsu.AXI_BVALID @[scala/exu/exu.scala 103:10]
    lsu.io.M_axi.AXI_BRESP <= io.lsu.AXI_BRESP @[scala/exu/exu.scala 103:10]
    io.lsu.AXI_ARBURST <= lsu.io.M_axi.AXI_ARBURST @[scala/exu/exu.scala 103:10]
    io.lsu.AXI_ARSIZE <= lsu.io.M_axi.AXI_ARSIZE @[scala/exu/exu.scala 103:10]
    io.lsu.AXI_ARLEN <= lsu.io.M_axi.AXI_ARLEN @[scala/exu/exu.scala 103:10]
    io.lsu.AXI_ARID <= lsu.io.M_axi.AXI_ARID @[scala/exu/exu.scala 103:10]
    lsu.io.M_axi.AXI_ARREADY <= io.lsu.AXI_ARREADY @[scala/exu/exu.scala 103:10]
    io.lsu.AXI_ARVALID <= lsu.io.M_axi.AXI_ARVALID @[scala/exu/exu.scala 103:10]
    io.lsu.AXI_ARADDR <= lsu.io.M_axi.AXI_ARADDR @[scala/exu/exu.scala 103:10]
    lsu.io.M_axi.AXI_RLAST <= io.lsu.AXI_RLAST @[scala/exu/exu.scala 103:10]
    lsu.io.M_axi.AXI_RID <= io.lsu.AXI_RID @[scala/exu/exu.scala 103:10]
    io.lsu.AXI_RREADY <= lsu.io.M_axi.AXI_RREADY @[scala/exu/exu.scala 103:10]
    lsu.io.M_axi.AXI_RVALID <= io.lsu.AXI_RVALID @[scala/exu/exu.scala 103:10]
    lsu.io.M_axi.AXI_RRESP <= io.lsu.AXI_RRESP @[scala/exu/exu.scala 103:10]
    lsu.io.M_axi.AXI_RDATA <= io.lsu.AXI_RDATA @[scala/exu/exu.scala 103:10]
    io.lsu.AXI_WLAST <= lsu.io.M_axi.AXI_WLAST @[scala/exu/exu.scala 103:10]
    io.lsu.AXI_WSTRB <= lsu.io.M_axi.AXI_WSTRB @[scala/exu/exu.scala 103:10]
    io.lsu.AXI_WDATA <= lsu.io.M_axi.AXI_WDATA @[scala/exu/exu.scala 103:10]
    lsu.io.M_axi.AXI_WREADY <= io.lsu.AXI_WREADY @[scala/exu/exu.scala 103:10]
    io.lsu.AXI_WVALID <= lsu.io.M_axi.AXI_WVALID @[scala/exu/exu.scala 103:10]
    io.lsu.AXI_AWID <= lsu.io.M_axi.AXI_AWID @[scala/exu/exu.scala 103:10]
    io.lsu.AXI_AWBURST <= lsu.io.M_axi.AXI_AWBURST @[scala/exu/exu.scala 103:10]
    io.lsu.AXI_AWSIZE <= lsu.io.M_axi.AXI_AWSIZE @[scala/exu/exu.scala 103:10]
    io.lsu.AXI_AWLEN <= lsu.io.M_axi.AXI_AWLEN @[scala/exu/exu.scala 103:10]
    lsu.io.M_axi.AXI_AWREADY <= io.lsu.AXI_AWREADY @[scala/exu/exu.scala 103:10]
    io.lsu.AXI_AWVALID <= lsu.io.M_axi.AXI_AWVALID @[scala/exu/exu.scala 103:10]
    io.lsu.AXI_AWADDR <= lsu.io.M_axi.AXI_AWADDR @[scala/exu/exu.scala 103:10]
    loadRes <= lsu.io.loadRes @[scala/exu/exu.scala 104:11]
    node beq = eq(aluSrc1, aluSrc2) @[scala/exu/exu.scala 107:21]
    node bne = eq(beq, UInt<1>("h0")) @[scala/exu/exu.scala 108:13]
    wire brchRes : UInt<1> @[scala/exu/exu.scala 110:21]
    node _brchRes_T = bits(aluRes, 0, 0) @[scala/exu/exu.scala 114:19]
    node _brchRes_T_1 = bits(aluRes, 0, 0) @[scala/exu/exu.scala 115:20]
    node _brchRes_T_2 = eq(_brchRes_T_1, UInt<1>("h0")) @[scala/exu/exu.scala 115:13]
    node _brchRes_T_3 = bits(aluRes, 0, 0) @[scala/exu/exu.scala 116:19]
    node _brchRes_T_4 = bits(aluRes, 0, 0) @[scala/exu/exu.scala 117:20]
    node _brchRes_T_5 = eq(_brchRes_T_4, UInt<1>("h0")) @[scala/exu/exu.scala 117:13]
    node _brchRes_T_6 = eq(UInt<3>("h0"), io.exu_opt) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _brchRes_T_7 = mux(_brchRes_T_6, beq, UInt<1>("h0")) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _brchRes_T_8 = eq(UInt<3>("h1"), io.exu_opt) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _brchRes_T_9 = mux(_brchRes_T_8, bne, _brchRes_T_7) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _brchRes_T_10 = eq(UInt<3>("h4"), io.exu_opt) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _brchRes_T_11 = mux(_brchRes_T_10, _brchRes_T, _brchRes_T_9) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _brchRes_T_12 = eq(UInt<3>("h5"), io.exu_opt) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _brchRes_T_13 = mux(_brchRes_T_12, _brchRes_T_2, _brchRes_T_11) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _brchRes_T_14 = eq(UInt<3>("h6"), io.exu_opt) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _brchRes_T_15 = mux(_brchRes_T_14, _brchRes_T_3, _brchRes_T_13) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _brchRes_T_16 = eq(UInt<3>("h7"), io.exu_opt) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _brchRes_T_17 = mux(_brchRes_T_16, _brchRes_T_5, _brchRes_T_15) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    brchRes <= _brchRes_T_17 @[scala/exu/exu.scala 111:11]
    node _io_o_res_T = mux(io.i_load, loadRes, aluRes) @[scala/exu/exu.scala 120:18]
    io.o_res <= _io_o_res_T @[scala/exu/exu.scala 120:12]
    node _io_o_brch_T = and(io.i_brch, brchRes) @[scala/exu/exu.scala 121:26]
    io.o_brch <= _io_o_brch_T @[scala/exu/exu.scala 121:13]

  module EXU_WBU_Regs :
    input clock : Clock
    input reset : Reset
    output io : { flip i_brch : UInt<1>, flip i_jal : UInt<1>, flip i_wen : UInt<1>, flip i_csr_wen : UInt<1>, flip i_jalr : UInt<1>, flip i_ebreak : UInt<1>, flip i_mret : UInt<1>, flip i_ecall : UInt<1>, flip i_res : UInt<32>, flip i_pc_next : UInt<32>, flip i_csr_addr : UInt<12>, flip i_rd_addr : UInt<5>, o_pc_next : UInt<32>, o_csr_addr : UInt<12>, o_rd_addr : UInt<5>, o_wen : UInt<1>, o_csr_wen : UInt<1>, o_brch : UInt<1>, o_jal : UInt<1>, o_jalr : UInt<1>, o_mret : UInt<1>, o_ecall : UInt<1>, o_ebreak : UInt<1>, o_res : UInt<32>, flip i_post_ready : UInt<1>, flip o_post_valid : UInt<1>} @[scala/exu/exu_wbu_regs.scala 9:14]

    reg o_pc_next : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[scala/exu/exu_wbu_regs.scala 39:29]
    reg o_csr_addr : UInt<12>, clock with :
      reset => (reset, UInt<12>("h0")) @[scala/exu/exu_wbu_regs.scala 40:29]
    reg o_rd_addr : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[scala/exu/exu_wbu_regs.scala 41:29]
    reg o_wen : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[scala/exu/exu_wbu_regs.scala 42:29]
    reg o_csr_wen : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[scala/exu/exu_wbu_regs.scala 43:29]
    reg o_brch : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[scala/exu/exu_wbu_regs.scala 44:29]
    reg o_jal : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[scala/exu/exu_wbu_regs.scala 45:29]
    reg o_jalr : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[scala/exu/exu_wbu_regs.scala 46:29]
    reg o_mret : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[scala/exu/exu_wbu_regs.scala 47:29]
    reg o_ecall : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[scala/exu/exu_wbu_regs.scala 48:29]
    reg o_res : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[scala/exu/exu_wbu_regs.scala 49:29]
    reg o_ebreak : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[scala/exu/exu_wbu_regs.scala 50:29]
    node _T = and(io.i_post_ready, io.o_post_valid) @[scala/exu/exu_wbu_regs.scala 52:24]
    when _T : @[scala/exu/exu_wbu_regs.scala 52:44]
      o_pc_next <= io.i_pc_next @[scala/exu/exu_wbu_regs.scala 53:17]
      o_csr_addr <= io.i_csr_addr @[scala/exu/exu_wbu_regs.scala 54:17]
      o_rd_addr <= io.i_rd_addr @[scala/exu/exu_wbu_regs.scala 55:17]
      o_wen <= io.i_wen @[scala/exu/exu_wbu_regs.scala 56:17]
      o_csr_wen <= io.i_csr_wen @[scala/exu/exu_wbu_regs.scala 57:17]
      o_brch <= io.i_brch @[scala/exu/exu_wbu_regs.scala 58:17]
      o_jal <= io.i_jal @[scala/exu/exu_wbu_regs.scala 59:17]
      o_jalr <= io.i_jalr @[scala/exu/exu_wbu_regs.scala 60:17]
      o_mret <= io.i_mret @[scala/exu/exu_wbu_regs.scala 61:17]
      o_ecall <= io.i_ecall @[scala/exu/exu_wbu_regs.scala 62:17]
      o_res <= io.i_res @[scala/exu/exu_wbu_regs.scala 63:17]
      o_ebreak <= io.i_ebreak @[scala/exu/exu_wbu_regs.scala 64:17]
    else :
      node _T_1 = eq(io.o_post_valid, UInt<1>("h0")) @[scala/exu/exu_wbu_regs.scala 65:33]
      node _T_2 = and(io.i_post_ready, _T_1) @[scala/exu/exu_wbu_regs.scala 65:30]
      when _T_2 : @[scala/exu/exu_wbu_regs.scala 65:51]
        o_pc_next <= UInt<1>("h0") @[scala/exu/exu_wbu_regs.scala 66:17]
        o_csr_addr <= UInt<1>("h0") @[scala/exu/exu_wbu_regs.scala 67:17]
        o_rd_addr <= UInt<1>("h0") @[scala/exu/exu_wbu_regs.scala 68:17]
        o_wen <= UInt<1>("h0") @[scala/exu/exu_wbu_regs.scala 69:17]
        o_csr_wen <= UInt<1>("h0") @[scala/exu/exu_wbu_regs.scala 70:17]
        o_brch <= UInt<1>("h0") @[scala/exu/exu_wbu_regs.scala 71:17]
        o_jal <= UInt<1>("h0") @[scala/exu/exu_wbu_regs.scala 72:17]
        o_jalr <= UInt<1>("h0") @[scala/exu/exu_wbu_regs.scala 73:17]
        o_mret <= UInt<1>("h0") @[scala/exu/exu_wbu_regs.scala 74:17]
        o_ecall <= UInt<1>("h0") @[scala/exu/exu_wbu_regs.scala 75:17]
        o_res <= UInt<1>("h0") @[scala/exu/exu_wbu_regs.scala 76:17]
        o_ebreak <= UInt<1>("h0") @[scala/exu/exu_wbu_regs.scala 77:17]
    io.o_pc_next <= o_pc_next @[scala/exu/exu_wbu_regs.scala 81:16]
    io.o_csr_addr <= o_csr_addr @[scala/exu/exu_wbu_regs.scala 82:17]
    io.o_rd_addr <= o_rd_addr @[scala/exu/exu_wbu_regs.scala 83:16]
    io.o_wen <= o_wen @[scala/exu/exu_wbu_regs.scala 84:12]
    io.o_csr_wen <= o_csr_wen @[scala/exu/exu_wbu_regs.scala 85:16]
    io.o_brch <= o_brch @[scala/exu/exu_wbu_regs.scala 86:13]
    io.o_jal <= o_jal @[scala/exu/exu_wbu_regs.scala 87:12]
    io.o_jalr <= o_jalr @[scala/exu/exu_wbu_regs.scala 88:13]
    io.o_mret <= o_mret @[scala/exu/exu_wbu_regs.scala 89:13]
    io.o_ecall <= o_ecall @[scala/exu/exu_wbu_regs.scala 90:14]
    io.o_res <= o_res @[scala/exu/exu_wbu_regs.scala 91:12]
    io.o_ebreak <= o_ebreak @[scala/exu/exu_wbu_regs.scala 92:15]

  module WBU :
    input clock : Clock
    input reset : Reset
    output io : { flip i_pre_valid : UInt<1>, flip i_wen : UInt<1>, flip i_rd_addr : UInt<5>, flip i_csr_addr : UInt<12>, flip i_csr_wen : UInt<1>, flip i_brch : UInt<1>, flip i_jal : UInt<1>, flip i_jalr : UInt<1>, flip i_ebreak : UInt<1>, flip i_mret : UInt<1>, flip i_ecall : UInt<1>, flip i_pc_next : UInt<32>, flip i_res : UInt<32>, o_pc_next : UInt<32>, o_rd_wdata : UInt<32>, o_csr_rd_wdata : UInt<32>, o_wbu_wen : UInt<1>, o_wbu_csr_wen : UInt<1>, o_rd_addr : UInt<5>, o_csr_addr : UInt<12>, o_pre_ready : UInt<1>, o_pc_update : UInt<1>} @[scala/wbu/wbu.scala 8:14]

    io.o_rd_wdata <= io.i_res @[scala/wbu/wbu.scala 35:17]
    io.o_csr_rd_wdata <= io.i_res @[scala/wbu/wbu.scala 36:21]
    io.o_wbu_wen <= io.i_wen @[scala/wbu/wbu.scala 37:16]
    io.o_wbu_csr_wen <= io.i_csr_wen @[scala/wbu/wbu.scala 38:20]
    io.o_rd_addr <= io.i_rd_addr @[scala/wbu/wbu.scala 39:16]
    io.o_csr_addr <= io.i_csr_addr @[scala/wbu/wbu.scala 40:17]
    reg o_pre_ready : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[scala/wbu/wbu.scala 42:28]
    reg o_pc_update : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[scala/wbu/wbu.scala 43:28]
    reg o_pc_next : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[scala/wbu/wbu.scala 44:26]
    io.o_pre_ready <= o_pre_ready @[scala/wbu/wbu.scala 47:18]
    io.o_pc_update <= o_pc_update @[scala/wbu/wbu.scala 48:18]
    io.o_pc_next <= o_pc_next @[scala/wbu/wbu.scala 49:18]
    node _T = eq(io.o_pc_update, UInt<1>("h0")) @[scala/wbu/wbu.scala 51:8]
    when _T : @[scala/wbu/wbu.scala 51:25]
      node _o_pc_update_T = or(io.i_jal, io.i_jalr) @[scala/wbu/wbu.scala 52:29]
      node _o_pc_update_T_1 = or(_o_pc_update_T, io.i_brch) @[scala/wbu/wbu.scala 52:42]
      node _o_pc_update_T_2 = or(_o_pc_update_T_1, io.i_ecall) @[scala/wbu/wbu.scala 52:55]
      node _o_pc_update_T_3 = or(_o_pc_update_T_2, io.i_mret) @[scala/wbu/wbu.scala 52:69]
      o_pc_update <= _o_pc_update_T_3 @[scala/wbu/wbu.scala 52:17]
    else :
      when io.o_pc_update : @[scala/wbu/wbu.scala 53:31]
        o_pc_update <= UInt<1>("h0") @[scala/wbu/wbu.scala 54:17]
    o_pc_next <= io.i_pc_next @[scala/wbu/wbu.scala 57:13]

  module CpuCore :
    input clock : Clock
    input reset : Reset
    output io : { io_master : { AXI_AWADDR : UInt<32>, AXI_AWVALID : UInt<1>, flip AXI_AWREADY : UInt<1>, AXI_AWLEN : UInt<8>, AXI_AWSIZE : UInt<3>, AXI_AWBURST : UInt<2>, AXI_AWID : UInt<4>, AXI_WVALID : UInt<1>, flip AXI_WREADY : UInt<1>, AXI_WDATA : UInt<32>, AXI_WSTRB : UInt<4>, AXI_WLAST : UInt<1>, flip AXI_RDATA : UInt<32>, flip AXI_RRESP : UInt<2>, flip AXI_RVALID : UInt<1>, AXI_RREADY : UInt<1>, flip AXI_RID : UInt<4>, flip AXI_RLAST : UInt<1>, AXI_ARADDR : UInt<32>, AXI_ARVALID : UInt<1>, flip AXI_ARREADY : UInt<1>, AXI_ARID : UInt<4>, AXI_ARLEN : UInt<8>, AXI_ARSIZE : UInt<3>, AXI_ARBURST : UInt<2>, flip AXI_BRESP : UInt<2>, flip AXI_BVALID : UInt<1>, AXI_BREADY : UInt<1>, flip AXI_BID : UInt<4>}, ifu_master : { AXI_AWADDR : UInt<32>, AXI_AWVALID : UInt<1>, flip AXI_AWREADY : UInt<1>, AXI_AWLEN : UInt<8>, AXI_AWSIZE : UInt<3>, AXI_AWBURST : UInt<2>, AXI_AWID : UInt<4>, AXI_WVALID : UInt<1>, flip AXI_WREADY : UInt<1>, AXI_WDATA : UInt<32>, AXI_WSTRB : UInt<4>, AXI_WLAST : UInt<1>, flip AXI_RDATA : UInt<32>, flip AXI_RRESP : UInt<2>, flip AXI_RVALID : UInt<1>, AXI_RREADY : UInt<1>, flip AXI_RID : UInt<4>, flip AXI_RLAST : UInt<1>, AXI_ARADDR : UInt<32>, AXI_ARVALID : UInt<1>, flip AXI_ARREADY : UInt<1>, AXI_ARID : UInt<4>, AXI_ARLEN : UInt<8>, AXI_ARSIZE : UInt<3>, AXI_ARBURST : UInt<2>, flip AXI_BRESP : UInt<2>, flip AXI_BVALID : UInt<1>, AXI_BREADY : UInt<1>, flip AXI_BID : UInt<4>}, data : UInt<32>, hit : UInt<1>} @[scala/cpu.scala 11:14]

    wire imm : UInt<32> @[scala/cpu.scala 24:17]
    wire idu_addr_rs1 : UInt<5> @[scala/cpu.scala 25:26]
    wire idu_addr_rs2 : UInt<5> @[scala/cpu.scala 26:26]
    wire idu_addr_rd : UInt<5> @[scala/cpu.scala 27:25]
    wire idu_csr_raddr : UInt<12> @[scala/cpu.scala 28:27]
    wire rs1 : UInt<32> @[scala/cpu.scala 29:17]
    wire rs2 : UInt<32> @[scala/cpu.scala 30:17]
    wire wbu_rd_wdata : UInt<32> @[scala/cpu.scala 31:26]
    wire csr_rd_wdata : UInt<32> @[scala/cpu.scala 32:26]
    wire exu_res : UInt<32> @[scala/cpu.scala 33:21]
    wire exu_brch : UInt<1> @[scala/cpu.scala 34:22]
    wire csr_rs2 : UInt<32> @[scala/cpu.scala 35:21]
    wire mepc : UInt<32> @[scala/cpu.scala 36:18]
    wire mtvec : UInt<32> @[scala/cpu.scala 37:19]
    wire exu_opt : UInt<3> @[scala/cpu.scala 40:21]
    wire alu_opt : UInt<10> @[scala/cpu.scala 41:21]
    wire idu_wen : UInt<1> @[scala/cpu.scala 42:21]
    wire csr_wen : UInt<1> @[scala/cpu.scala 43:21]
    wire wbu_wen : UInt<1> @[scala/cpu.scala 44:21]
    wire wbu_csr_wen : UInt<1> @[scala/cpu.scala 45:25]
    wire pc_next : UInt<32> @[scala/cpu.scala 46:21]
    wire i_src_sel1 : UInt<2> @[scala/cpu.scala 47:24]
    wire i_src_sel2 : UInt<3> @[scala/cpu.scala 48:24]
    wire brch : UInt<1> @[scala/cpu.scala 49:18]
    wire jal : UInt<1> @[scala/cpu.scala 50:17]
    wire jalr : UInt<1> @[scala/cpu.scala 51:18]
    wire ebreak : UInt<1> @[scala/cpu.scala 52:20]
    wire if_store : UInt<1> @[scala/cpu.scala 53:22]
    wire if_load : UInt<1> @[scala/cpu.scala 54:21]
    wire ecall : UInt<1> @[scala/cpu.scala 55:19]
    wire mret : UInt<1> @[scala/cpu.scala 56:18]
    wire pc_update_en : UInt<1> @[scala/cpu.scala 57:26]
    wire ifu2idu_valid : UInt<1> @[scala/cpu.scala 60:27]
    wire idu2ifu_ready : UInt<1> @[scala/cpu.scala 61:27]
    wire idu2exu_valid : UInt<1> @[scala/cpu.scala 62:27]
    wire exu2idu_ready : UInt<1> @[scala/cpu.scala 63:27]
    wire exu2wbu_valid : UInt<1> @[scala/cpu.scala 64:27]
    wire wbu2exu_ready : UInt<1> @[scala/cpu.scala 65:27]
    wire fence_i : UInt<1> @[scala/cpu.scala 66:27]
    wire wbu_rd_addr : UInt<5> @[scala/cpu.scala 68:35]
    wire wbu_csr_addr : UInt<12> @[scala/cpu.scala 69:35]
    wire idu2exu_pc : UInt<32> @[scala/cpu.scala 71:24]
    wire idu2exu_src1 : UInt<32> @[scala/cpu.scala 72:26]
    wire idu2exu_src2 : UInt<32> @[scala/cpu.scala 73:26]
    wire idu2exu_imm : UInt<32> @[scala/cpu.scala 74:25]
    wire idu2exu_src_sel1 : UInt<2> @[scala/cpu.scala 75:30]
    wire idu2exu_src_sel2 : UInt<3> @[scala/cpu.scala 76:30]
    wire idu2exu_rd : UInt<4> @[scala/cpu.scala 77:24]
    wire idu2exu_exu_opt : UInt<3> @[scala/cpu.scala 78:29]
    wire idu2exu_alu_opt : UInt<10> @[scala/cpu.scala 79:29]
    wire idu2exu_wen : UInt<1> @[scala/cpu.scala 80:25]
    wire idu2exu_csr_wen : UInt<1> @[scala/cpu.scala 81:29]
    wire idu2exu_mret : UInt<1> @[scala/cpu.scala 82:26]
    wire idu2exu_ecall : UInt<1> @[scala/cpu.scala 83:27]
    wire idu2exu_load : UInt<1> @[scala/cpu.scala 84:26]
    wire idu2exu_store : UInt<1> @[scala/cpu.scala 85:27]
    wire idu2exu_brch : UInt<1> @[scala/cpu.scala 86:26]
    wire idu2exu_jal : UInt<1> @[scala/cpu.scala 87:25]
    wire idu2exu_jalr : UInt<1> @[scala/cpu.scala 88:26]
    wire idu2exu_ebreak : UInt<1> @[scala/cpu.scala 89:28]
    wire idu2exu_fence_i : UInt<1> @[scala/cpu.scala 90:29]
    wire idu2exu_csr_addr : UInt<12> @[scala/cpu.scala 91:30]
    wire exu2wbu_pc_next : UInt<32> @[scala/cpu.scala 93:29]
    wire exu2wbu_csr_addr : UInt<12> @[scala/cpu.scala 94:30]
    wire exu2wbu_rd_addr : UInt<4> @[scala/cpu.scala 95:29]
    wire exu2wbu_wen : UInt<1> @[scala/cpu.scala 96:25]
    wire exu2wbu_csr_wen : UInt<1> @[scala/cpu.scala 97:29]
    wire exu2wbu_brch : UInt<1> @[scala/cpu.scala 98:26]
    wire exu2wbu_jal : UInt<1> @[scala/cpu.scala 99:25]
    wire exu2wbu_jalr : UInt<1> @[scala/cpu.scala 100:26]
    wire exu2wbu_mret : UInt<1> @[scala/cpu.scala 101:26]
    wire exu2wbu_ecall : UInt<1> @[scala/cpu.scala 102:27]
    wire exu2wbu_res : UInt<32> @[scala/cpu.scala 103:25]
    wire exu2wbu_ebreak : UInt<1> @[scala/cpu.scala 104:28]
    wire ifu2idu_pc : UInt<32> @[scala/cpu.scala 106:35]
    inst regfile of RegisterFile @[scala/cpu.scala 108:23]
    regfile.clock <= clock
    regfile.reset <= reset
    regfile.io.waddr <= wbu_rd_addr @[scala/cpu.scala 109:20]
    regfile.io.wdata <= wbu_rd_wdata @[scala/cpu.scala 110:20]
    regfile.io.wen <= wbu_wen @[scala/cpu.scala 111:18]
    regfile.io.exu_rd <= idu2exu_rd @[scala/cpu.scala 112:21]
    regfile.io.exu_wdata <= exu_res @[scala/cpu.scala 113:24]
    regfile.io.exu_wen <= idu2exu_wen @[scala/cpu.scala 114:22]
    regfile.io.wbu_rd <= exu2wbu_rd_addr @[scala/cpu.scala 115:21]
    regfile.io.wbu_wdata <= exu2wbu_res @[scala/cpu.scala 116:24]
    regfile.io.wbu_wen <= exu2wbu_wen @[scala/cpu.scala 117:22]
    regfile.io.raddr1 <= idu_addr_rs1 @[scala/cpu.scala 118:21]
    regfile.io.raddr2 <= idu_addr_rs2 @[scala/cpu.scala 119:21]
    regfile.io.idu_wen <= idu_wen @[scala/cpu.scala 120:22]
    regfile.io.idu_waddr <= idu_addr_rd @[scala/cpu.scala 121:24]
    rs1 <= regfile.io.rdata1 @[scala/cpu.scala 124:7]
    rs2 <= regfile.io.rdata2 @[scala/cpu.scala 125:7]
    inst Csrs of CSR @[scala/cpu.scala 127:20]
    Csrs.clock <= clock
    Csrs.reset <= reset
    Csrs.io.i_csr_wen <= wbu_csr_wen @[scala/cpu.scala 128:21]
    Csrs.io.i_ecall <= ecall @[scala/cpu.scala 129:19]
    Csrs.io.i_mret <= mret @[scala/cpu.scala 130:18]
    Csrs.io.i_pc <= ifu2idu_pc @[scala/cpu.scala 131:16]
    Csrs.io.i_csr_raddr <= idu_csr_raddr @[scala/cpu.scala 132:23]
    Csrs.io.i_csr_waddr <= wbu_csr_addr @[scala/cpu.scala 133:23]
    Csrs.io.i_csr_wdata <= csr_rd_wdata @[scala/cpu.scala 134:23]
    csr_rs2 <= Csrs.io.o_csr_rdata @[scala/cpu.scala 135:11]
    mepc <= Csrs.io.o_mepc @[scala/cpu.scala 136:9]
    mtvec <= Csrs.io.o_mtvec @[scala/cpu.scala 137:9]
    inst icache of ICache @[scala/cpu.scala 140:22]
    icache.clock <= clock
    icache.reset <= reset
    inst xbar of Xbar @[scala/cpu.scala 141:23]
    xbar.clock <= clock
    xbar.reset <= reset
    inst ifu of IFU @[scala/cpu.scala 142:19]
    ifu.clock <= clock
    ifu.reset <= reset
    node _T = asUInt(reset) @[scala/cpu.scala 143:39]
    node _T_1 = or(_T, pc_update_en) @[scala/cpu.scala 143:46]
    node _T_2 = or(_T_1, idu2exu_fence_i) @[scala/cpu.scala 143:61]
    inst ifu2idu_regs of IFU2IDURegs @[scala/cpu.scala 144:11]
    ifu2idu_regs.clock <= clock
    ifu2idu_regs.reset <= _T_2
    icache.io.addr <= ifu.io.req_addr @[scala/cpu.scala 147:21]
    icache.io.fence_i <= fence_i @[scala/cpu.scala 148:21]
    icache.io.ifu.AXI_BID <= xbar.io.ifu.AXI_BID @[scala/cpu.scala 149:17]
    xbar.io.ifu.AXI_BREADY <= icache.io.ifu.AXI_BREADY @[scala/cpu.scala 149:17]
    icache.io.ifu.AXI_BVALID <= xbar.io.ifu.AXI_BVALID @[scala/cpu.scala 149:17]
    icache.io.ifu.AXI_BRESP <= xbar.io.ifu.AXI_BRESP @[scala/cpu.scala 149:17]
    xbar.io.ifu.AXI_ARBURST <= icache.io.ifu.AXI_ARBURST @[scala/cpu.scala 149:17]
    xbar.io.ifu.AXI_ARSIZE <= icache.io.ifu.AXI_ARSIZE @[scala/cpu.scala 149:17]
    xbar.io.ifu.AXI_ARLEN <= icache.io.ifu.AXI_ARLEN @[scala/cpu.scala 149:17]
    xbar.io.ifu.AXI_ARID <= icache.io.ifu.AXI_ARID @[scala/cpu.scala 149:17]
    icache.io.ifu.AXI_ARREADY <= xbar.io.ifu.AXI_ARREADY @[scala/cpu.scala 149:17]
    xbar.io.ifu.AXI_ARVALID <= icache.io.ifu.AXI_ARVALID @[scala/cpu.scala 149:17]
    xbar.io.ifu.AXI_ARADDR <= icache.io.ifu.AXI_ARADDR @[scala/cpu.scala 149:17]
    icache.io.ifu.AXI_RLAST <= xbar.io.ifu.AXI_RLAST @[scala/cpu.scala 149:17]
    icache.io.ifu.AXI_RID <= xbar.io.ifu.AXI_RID @[scala/cpu.scala 149:17]
    xbar.io.ifu.AXI_RREADY <= icache.io.ifu.AXI_RREADY @[scala/cpu.scala 149:17]
    icache.io.ifu.AXI_RVALID <= xbar.io.ifu.AXI_RVALID @[scala/cpu.scala 149:17]
    icache.io.ifu.AXI_RRESP <= xbar.io.ifu.AXI_RRESP @[scala/cpu.scala 149:17]
    icache.io.ifu.AXI_RDATA <= xbar.io.ifu.AXI_RDATA @[scala/cpu.scala 149:17]
    xbar.io.ifu.AXI_WLAST <= icache.io.ifu.AXI_WLAST @[scala/cpu.scala 149:17]
    xbar.io.ifu.AXI_WSTRB <= icache.io.ifu.AXI_WSTRB @[scala/cpu.scala 149:17]
    xbar.io.ifu.AXI_WDATA <= icache.io.ifu.AXI_WDATA @[scala/cpu.scala 149:17]
    icache.io.ifu.AXI_WREADY <= xbar.io.ifu.AXI_WREADY @[scala/cpu.scala 149:17]
    xbar.io.ifu.AXI_WVALID <= icache.io.ifu.AXI_WVALID @[scala/cpu.scala 149:17]
    xbar.io.ifu.AXI_AWID <= icache.io.ifu.AXI_AWID @[scala/cpu.scala 149:17]
    xbar.io.ifu.AXI_AWBURST <= icache.io.ifu.AXI_AWBURST @[scala/cpu.scala 149:17]
    xbar.io.ifu.AXI_AWSIZE <= icache.io.ifu.AXI_AWSIZE @[scala/cpu.scala 149:17]
    xbar.io.ifu.AXI_AWLEN <= icache.io.ifu.AXI_AWLEN @[scala/cpu.scala 149:17]
    icache.io.ifu.AXI_AWREADY <= xbar.io.ifu.AXI_AWREADY @[scala/cpu.scala 149:17]
    xbar.io.ifu.AXI_AWVALID <= icache.io.ifu.AXI_AWVALID @[scala/cpu.scala 149:17]
    xbar.io.ifu.AXI_AWADDR <= icache.io.ifu.AXI_AWADDR @[scala/cpu.scala 149:17]
    ifu.io.hit <= icache.io.hit @[scala/cpu.scala 151:23]
    ifu.io.i_pc_next <= pc_next @[scala/cpu.scala 152:23]
    ifu.io.i_pc_update <= pc_update_en @[scala/cpu.scala 153:23]
    ifu.io.i_post_ready <= idu2ifu_ready @[scala/cpu.scala 154:23]
    ifu.io.icache_ins <= icache.io.data @[scala/cpu.scala 155:23]
    io.data <= icache.io.data @[scala/cpu.scala 157:11]
    icache.io.ifu.AXI_BID <= io.ifu_master.AXI_BID @[scala/cpu.scala 158:17]
    io.ifu_master.AXI_BREADY <= icache.io.ifu.AXI_BREADY @[scala/cpu.scala 158:17]
    icache.io.ifu.AXI_BVALID <= io.ifu_master.AXI_BVALID @[scala/cpu.scala 158:17]
    icache.io.ifu.AXI_BRESP <= io.ifu_master.AXI_BRESP @[scala/cpu.scala 158:17]
    io.ifu_master.AXI_ARBURST <= icache.io.ifu.AXI_ARBURST @[scala/cpu.scala 158:17]
    io.ifu_master.AXI_ARSIZE <= icache.io.ifu.AXI_ARSIZE @[scala/cpu.scala 158:17]
    io.ifu_master.AXI_ARLEN <= icache.io.ifu.AXI_ARLEN @[scala/cpu.scala 158:17]
    io.ifu_master.AXI_ARID <= icache.io.ifu.AXI_ARID @[scala/cpu.scala 158:17]
    icache.io.ifu.AXI_ARREADY <= io.ifu_master.AXI_ARREADY @[scala/cpu.scala 158:17]
    io.ifu_master.AXI_ARVALID <= icache.io.ifu.AXI_ARVALID @[scala/cpu.scala 158:17]
    io.ifu_master.AXI_ARADDR <= icache.io.ifu.AXI_ARADDR @[scala/cpu.scala 158:17]
    icache.io.ifu.AXI_RLAST <= io.ifu_master.AXI_RLAST @[scala/cpu.scala 158:17]
    icache.io.ifu.AXI_RID <= io.ifu_master.AXI_RID @[scala/cpu.scala 158:17]
    io.ifu_master.AXI_RREADY <= icache.io.ifu.AXI_RREADY @[scala/cpu.scala 158:17]
    icache.io.ifu.AXI_RVALID <= io.ifu_master.AXI_RVALID @[scala/cpu.scala 158:17]
    icache.io.ifu.AXI_RRESP <= io.ifu_master.AXI_RRESP @[scala/cpu.scala 158:17]
    icache.io.ifu.AXI_RDATA <= io.ifu_master.AXI_RDATA @[scala/cpu.scala 158:17]
    io.ifu_master.AXI_WLAST <= icache.io.ifu.AXI_WLAST @[scala/cpu.scala 158:17]
    io.ifu_master.AXI_WSTRB <= icache.io.ifu.AXI_WSTRB @[scala/cpu.scala 158:17]
    io.ifu_master.AXI_WDATA <= icache.io.ifu.AXI_WDATA @[scala/cpu.scala 158:17]
    icache.io.ifu.AXI_WREADY <= io.ifu_master.AXI_WREADY @[scala/cpu.scala 158:17]
    io.ifu_master.AXI_WVALID <= icache.io.ifu.AXI_WVALID @[scala/cpu.scala 158:17]
    io.ifu_master.AXI_AWID <= icache.io.ifu.AXI_AWID @[scala/cpu.scala 158:17]
    io.ifu_master.AXI_AWBURST <= icache.io.ifu.AXI_AWBURST @[scala/cpu.scala 158:17]
    io.ifu_master.AXI_AWSIZE <= icache.io.ifu.AXI_AWSIZE @[scala/cpu.scala 158:17]
    io.ifu_master.AXI_AWLEN <= icache.io.ifu.AXI_AWLEN @[scala/cpu.scala 158:17]
    icache.io.ifu.AXI_AWREADY <= io.ifu_master.AXI_AWREADY @[scala/cpu.scala 158:17]
    io.ifu_master.AXI_AWVALID <= icache.io.ifu.AXI_AWVALID @[scala/cpu.scala 158:17]
    io.ifu_master.AXI_AWADDR <= icache.io.ifu.AXI_AWADDR @[scala/cpu.scala 158:17]
    io.hit <= icache.io.hit @[scala/cpu.scala 159:10]
    ifu2idu_regs.io.i_pc <= ifu.io.pc_next @[scala/cpu.scala 161:33]
    ifu2idu_pc <= ifu2idu_regs.io.o_pc @[scala/cpu.scala 162:33]
    ifu2idu_regs.io.i_ins <= icache.io.data @[scala/cpu.scala 163:33]
    ifu2idu_regs.io.i_icache_hit <= icache.io.hit @[scala/cpu.scala 164:33]
    ifu2idu_regs.io.i_pre_valid <= pc_update_en @[scala/cpu.scala 165:33]
    ifu2idu_regs.io.i_post_ready <= idu2ifu_ready @[scala/cpu.scala 166:33]
    ifu2idu_valid <= ifu2idu_regs.io.o_post_valid @[scala/cpu.scala 167:33]
    inst idu1 of IDU @[scala/cpu.scala 169:20]
    idu1.clock <= clock
    idu1.reset <= reset
    idu1.io.ins <= ifu2idu_regs.io.o_ins @[scala/cpu.scala 170:17]
    imm <= idu1.io.o_imm @[scala/cpu.scala 171:17]
    idu_addr_rd <= idu1.io.o_rd @[scala/cpu.scala 172:17]
    idu_addr_rs1 <= idu1.io.o_rs1 @[scala/cpu.scala 173:17]
    idu_addr_rs2 <= idu1.io.o_rs2 @[scala/cpu.scala 174:17]
    idu_csr_raddr <= idu1.io.o_csr_addr @[scala/cpu.scala 175:17]
    exu_opt <= idu1.io.o_exu_opt @[scala/cpu.scala 176:17]
    alu_opt <= idu1.io.o_alu_opt @[scala/cpu.scala 177:17]
    idu_wen <= idu1.io.o_wen @[scala/cpu.scala 178:17]
    csr_wen <= idu1.io.o_csr_wen @[scala/cpu.scala 179:17]
    i_src_sel1 <= idu1.io.o_src_sel1 @[scala/cpu.scala 180:17]
    i_src_sel2 <= idu1.io.o_src_sel2 @[scala/cpu.scala 181:17]
    ecall <= idu1.io.o_ecall @[scala/cpu.scala 182:17]
    mret <= idu1.io.o_mret @[scala/cpu.scala 183:17]
    if_load <= idu1.io.o_load @[scala/cpu.scala 184:17]
    if_store <= idu1.io.o_store @[scala/cpu.scala 185:17]
    brch <= idu1.io.o_brch @[scala/cpu.scala 186:17]
    jal <= idu1.io.o_jal @[scala/cpu.scala 187:17]
    jalr <= idu1.io.o_jalr @[scala/cpu.scala 188:17]
    ebreak <= idu1.io.o_ebreak @[scala/cpu.scala 189:17]
    fence_i <= idu1.io.o_fence_i @[scala/cpu.scala 190:17]
    node _T_3 = asUInt(reset) @[scala/cpu.scala 192:38]
    node _T_4 = or(_T_3, pc_update_en) @[scala/cpu.scala 192:45]
    node _T_5 = or(_T_4, idu2exu_fence_i) @[scala/cpu.scala 192:60]
    inst idu2exu_regs of IDU_EXU_Regs @[scala/cpu.scala 193:11]
    idu2exu_regs.clock <= clock
    idu2exu_regs.reset <= _T_5
    idu2exu_regs.io.i_pre_valid <= ifu2idu_valid @[scala/cpu.scala 195:31]
    idu2exu_regs.io.i_post_ready <= exu2idu_ready @[scala/cpu.scala 196:32]
    idu2ifu_ready <= idu2exu_regs.io.pre_ready @[scala/cpu.scala 198:16]
    idu2exu_valid <= idu2exu_regs.io.post_valid @[scala/cpu.scala 199:16]
    idu2exu_regs.io.i_pc <= ifu2idu_pc @[scala/cpu.scala 201:24]
    idu2exu_regs.io.i_imm <= imm @[scala/cpu.scala 202:25]
    idu2exu_regs.io.i_csr_addr <= idu_csr_raddr @[scala/cpu.scala 203:30]
    idu2exu_regs.io.i_src1 <= rs1 @[scala/cpu.scala 204:26]
    idu2exu_regs.io.i_src2 <= rs2 @[scala/cpu.scala 205:26]
    idu2exu_regs.io.i_mepc <= mepc @[scala/cpu.scala 206:26]
    idu2exu_regs.io.i_mtvec <= mtvec @[scala/cpu.scala 207:27]
    idu2exu_regs.io.i_rd <= idu_addr_rd @[scala/cpu.scala 208:24]
    idu2exu_regs.io.i_csr_rs2 <= csr_rs2 @[scala/cpu.scala 209:29]
    idu2exu_regs.io.i_csr_src_sel <= csr_wen @[scala/cpu.scala 210:33]
    idu2exu_regs.io.i_exu_opt <= exu_opt @[scala/cpu.scala 211:29]
    idu2exu_regs.io.i_alu_opt <= alu_opt @[scala/cpu.scala 212:29]
    idu2exu_regs.io.i_wen <= idu_wen @[scala/cpu.scala 213:25]
    idu2exu_regs.io.i_csr_wen <= csr_wen @[scala/cpu.scala 214:29]
    idu2exu_regs.io.i_src_sel1 <= i_src_sel1 @[scala/cpu.scala 215:30]
    idu2exu_regs.io.i_src_sel2 <= i_src_sel2 @[scala/cpu.scala 216:30]
    idu2exu_regs.io.i_mret <= mret @[scala/cpu.scala 217:26]
    idu2exu_regs.io.i_ecall <= ecall @[scala/cpu.scala 218:27]
    idu2exu_regs.io.i_load <= if_load @[scala/cpu.scala 219:26]
    idu2exu_regs.io.i_store <= if_store @[scala/cpu.scala 220:27]
    idu2exu_regs.io.i_brch <= brch @[scala/cpu.scala 221:26]
    idu2exu_regs.io.i_jal <= jal @[scala/cpu.scala 222:25]
    idu2exu_regs.io.i_jalr <= jalr @[scala/cpu.scala 223:26]
    idu2exu_regs.io.i_fence_i <= fence_i @[scala/cpu.scala 224:29]
    idu2exu_regs.io.i_ebreak <= ebreak @[scala/cpu.scala 225:28]
    idu2exu_pc <= idu2exu_regs.io.out.pc @[scala/cpu.scala 227:25]
    idu2exu_src1 <= idu2exu_regs.io.out.src1 @[scala/cpu.scala 228:25]
    idu2exu_src2 <= idu2exu_regs.io.out.src2 @[scala/cpu.scala 229:25]
    idu2exu_imm <= idu2exu_regs.io.out.imm @[scala/cpu.scala 230:25]
    idu2exu_src_sel1 <= idu2exu_regs.io.out.src_sel1 @[scala/cpu.scala 231:25]
    idu2exu_src_sel2 <= idu2exu_regs.io.out.src_sel2 @[scala/cpu.scala 232:25]
    idu2exu_rd <= idu2exu_regs.io.out.rd @[scala/cpu.scala 233:25]
    idu2exu_exu_opt <= idu2exu_regs.io.out.exu_opt @[scala/cpu.scala 234:25]
    idu2exu_alu_opt <= idu2exu_regs.io.out.alu_opt @[scala/cpu.scala 235:25]
    idu2exu_wen <= idu2exu_regs.io.out.wen @[scala/cpu.scala 236:25]
    idu2exu_csr_wen <= idu2exu_regs.io.out.csr_wen @[scala/cpu.scala 237:25]
    idu2exu_mret <= idu2exu_regs.io.out.mret @[scala/cpu.scala 238:25]
    idu2exu_ecall <= idu2exu_regs.io.out.ecall @[scala/cpu.scala 239:25]
    idu2exu_load <= idu2exu_regs.io.out.load @[scala/cpu.scala 240:25]
    idu2exu_store <= idu2exu_regs.io.out.store @[scala/cpu.scala 241:25]
    idu2exu_brch <= idu2exu_regs.io.out.brch @[scala/cpu.scala 242:25]
    idu2exu_jal <= idu2exu_regs.io.out.jal @[scala/cpu.scala 243:25]
    idu2exu_jalr <= idu2exu_regs.io.out.jalr @[scala/cpu.scala 244:25]
    idu2exu_ebreak <= idu2exu_regs.io.out.ebreak @[scala/cpu.scala 245:25]
    idu2exu_fence_i <= idu2exu_regs.io.out.fence_i @[scala/cpu.scala 246:25]
    idu2exu_csr_addr <= idu2exu_regs.io.out.csr_addr @[scala/cpu.scala 247:25]
    wire exu_pc_next : UInt<32> @[scala/cpu.scala 249:25]
    inst exu of EXU @[scala/cpu.scala 250:19]
    exu.clock <= clock
    exu.reset <= reset
    exu.io.i_src1 <= idu2exu_src1 @[scala/cpu.scala 251:17]
    exu.io.i_src2 <= idu2exu_src2 @[scala/cpu.scala 252:17]
    exu.io.i_imm <= idu2exu_imm @[scala/cpu.scala 253:16]
    exu.io.i_pc <= idu2exu_pc @[scala/cpu.scala 254:15]
    exu.io.i_src_sel1 <= idu2exu_src_sel1 @[scala/cpu.scala 255:21]
    exu.io.i_src_sel2 <= idu2exu_src_sel2 @[scala/cpu.scala 256:21]
    exu.io.i_load <= idu2exu_load @[scala/cpu.scala 257:17]
    exu.io.i_store <= idu2exu_store @[scala/cpu.scala 258:18]
    exu.io.i_brch <= idu2exu_brch @[scala/cpu.scala 259:17]
    exu.io.i_jal <= idu2exu_jal @[scala/cpu.scala 260:16]
    exu.io.i_jalr <= idu2exu_jalr @[scala/cpu.scala 261:17]
    exu.io.i_ecall <= idu2exu_ecall @[scala/cpu.scala 262:18]
    exu.io.i_mret <= idu2exu_mret @[scala/cpu.scala 263:17]
    exu.io.exu_opt <= idu2exu_exu_opt @[scala/cpu.scala 264:18]
    exu.io.i_alu_opt <= idu2exu_alu_opt @[scala/cpu.scala 265:20]
    exu_res <= exu.io.o_res @[scala/cpu.scala 266:15]
    exu_brch <= exu.io.o_brch @[scala/cpu.scala 267:15]
    exu_pc_next <= exu.io.o_pc_next @[scala/cpu.scala 268:15]
    exu.io.lsu.AXI_BID <= xbar.io.lsu.AXI_BID @[scala/cpu.scala 270:15]
    xbar.io.lsu.AXI_BREADY <= exu.io.lsu.AXI_BREADY @[scala/cpu.scala 270:15]
    exu.io.lsu.AXI_BVALID <= xbar.io.lsu.AXI_BVALID @[scala/cpu.scala 270:15]
    exu.io.lsu.AXI_BRESP <= xbar.io.lsu.AXI_BRESP @[scala/cpu.scala 270:15]
    xbar.io.lsu.AXI_ARBURST <= exu.io.lsu.AXI_ARBURST @[scala/cpu.scala 270:15]
    xbar.io.lsu.AXI_ARSIZE <= exu.io.lsu.AXI_ARSIZE @[scala/cpu.scala 270:15]
    xbar.io.lsu.AXI_ARLEN <= exu.io.lsu.AXI_ARLEN @[scala/cpu.scala 270:15]
    xbar.io.lsu.AXI_ARID <= exu.io.lsu.AXI_ARID @[scala/cpu.scala 270:15]
    exu.io.lsu.AXI_ARREADY <= xbar.io.lsu.AXI_ARREADY @[scala/cpu.scala 270:15]
    xbar.io.lsu.AXI_ARVALID <= exu.io.lsu.AXI_ARVALID @[scala/cpu.scala 270:15]
    xbar.io.lsu.AXI_ARADDR <= exu.io.lsu.AXI_ARADDR @[scala/cpu.scala 270:15]
    exu.io.lsu.AXI_RLAST <= xbar.io.lsu.AXI_RLAST @[scala/cpu.scala 270:15]
    exu.io.lsu.AXI_RID <= xbar.io.lsu.AXI_RID @[scala/cpu.scala 270:15]
    xbar.io.lsu.AXI_RREADY <= exu.io.lsu.AXI_RREADY @[scala/cpu.scala 270:15]
    exu.io.lsu.AXI_RVALID <= xbar.io.lsu.AXI_RVALID @[scala/cpu.scala 270:15]
    exu.io.lsu.AXI_RRESP <= xbar.io.lsu.AXI_RRESP @[scala/cpu.scala 270:15]
    exu.io.lsu.AXI_RDATA <= xbar.io.lsu.AXI_RDATA @[scala/cpu.scala 270:15]
    xbar.io.lsu.AXI_WLAST <= exu.io.lsu.AXI_WLAST @[scala/cpu.scala 270:15]
    xbar.io.lsu.AXI_WSTRB <= exu.io.lsu.AXI_WSTRB @[scala/cpu.scala 270:15]
    xbar.io.lsu.AXI_WDATA <= exu.io.lsu.AXI_WDATA @[scala/cpu.scala 270:15]
    exu.io.lsu.AXI_WREADY <= xbar.io.lsu.AXI_WREADY @[scala/cpu.scala 270:15]
    xbar.io.lsu.AXI_WVALID <= exu.io.lsu.AXI_WVALID @[scala/cpu.scala 270:15]
    xbar.io.lsu.AXI_AWID <= exu.io.lsu.AXI_AWID @[scala/cpu.scala 270:15]
    xbar.io.lsu.AXI_AWBURST <= exu.io.lsu.AXI_AWBURST @[scala/cpu.scala 270:15]
    xbar.io.lsu.AXI_AWSIZE <= exu.io.lsu.AXI_AWSIZE @[scala/cpu.scala 270:15]
    xbar.io.lsu.AXI_AWLEN <= exu.io.lsu.AXI_AWLEN @[scala/cpu.scala 270:15]
    exu.io.lsu.AXI_AWREADY <= xbar.io.lsu.AXI_AWREADY @[scala/cpu.scala 270:15]
    xbar.io.lsu.AXI_AWVALID <= exu.io.lsu.AXI_AWVALID @[scala/cpu.scala 270:15]
    xbar.io.lsu.AXI_AWADDR <= exu.io.lsu.AXI_AWADDR @[scala/cpu.scala 270:15]
    exu.io.i_pre_valid <= idu2exu_valid @[scala/cpu.scala 272:27]
    exu.io.i_post_ready <= wbu2exu_ready @[scala/cpu.scala 273:27]
    exu2wbu_valid <= exu.io.o_post_valid @[scala/cpu.scala 274:19]
    exu2idu_ready <= exu.io.o_pre_ready @[scala/cpu.scala 275:19]
    node _T_6 = asUInt(reset) @[scala/cpu.scala 277:38]
    node _T_7 = or(_T_6, pc_update_en) @[scala/cpu.scala 277:45]
    inst exu_wbu_regs of EXU_WBU_Regs @[scala/cpu.scala 278:11]
    exu_wbu_regs.clock <= clock
    exu_wbu_regs.reset <= _T_7
    exu_wbu_regs.io.i_brch <= exu_brch @[scala/cpu.scala 281:26]
    exu_wbu_regs.io.i_jal <= idu2exu_jal @[scala/cpu.scala 282:25]
    exu_wbu_regs.io.i_wen <= idu2exu_wen @[scala/cpu.scala 283:25]
    exu_wbu_regs.io.i_csr_wen <= idu2exu_csr_wen @[scala/cpu.scala 284:29]
    exu_wbu_regs.io.i_jalr <= idu2exu_jalr @[scala/cpu.scala 285:26]
    exu_wbu_regs.io.i_ebreak <= idu2exu_ebreak @[scala/cpu.scala 286:28]
    exu_wbu_regs.io.i_mret <= idu2exu_mret @[scala/cpu.scala 287:26]
    exu_wbu_regs.io.i_ecall <= idu2exu_ecall @[scala/cpu.scala 288:27]
    exu_wbu_regs.io.i_res <= exu_res @[scala/cpu.scala 289:25]
    exu_wbu_regs.io.i_pc_next <= exu_pc_next @[scala/cpu.scala 290:29]
    exu_wbu_regs.io.i_csr_addr <= idu2exu_csr_addr @[scala/cpu.scala 291:30]
    exu_wbu_regs.io.i_rd_addr <= idu2exu_rd @[scala/cpu.scala 292:29]
    exu_wbu_regs.io.i_post_ready <= wbu2exu_ready @[scala/cpu.scala 293:34]
    exu_wbu_regs.io.o_post_valid <= exu2wbu_valid @[scala/cpu.scala 294:34]
    exu2wbu_pc_next <= exu_wbu_regs.io.o_pc_next @[scala/cpu.scala 296:22]
    exu2wbu_csr_addr <= exu_wbu_regs.io.o_csr_addr @[scala/cpu.scala 297:22]
    exu2wbu_rd_addr <= exu_wbu_regs.io.o_rd_addr @[scala/cpu.scala 298:22]
    exu2wbu_wen <= exu_wbu_regs.io.o_wen @[scala/cpu.scala 299:22]
    exu2wbu_csr_wen <= exu_wbu_regs.io.o_csr_wen @[scala/cpu.scala 300:22]
    exu2wbu_brch <= exu_wbu_regs.io.o_brch @[scala/cpu.scala 301:22]
    exu2wbu_jal <= exu_wbu_regs.io.o_jal @[scala/cpu.scala 302:22]
    exu2wbu_jalr <= exu_wbu_regs.io.o_jalr @[scala/cpu.scala 303:22]
    exu2wbu_mret <= exu_wbu_regs.io.o_mret @[scala/cpu.scala 304:22]
    exu2wbu_ecall <= exu_wbu_regs.io.o_ecall @[scala/cpu.scala 305:22]
    exu2wbu_res <= exu_wbu_regs.io.o_res @[scala/cpu.scala 306:22]
    exu2wbu_ebreak <= exu_wbu_regs.io.o_ebreak @[scala/cpu.scala 307:22]
    inst wbu1 of WBU @[scala/cpu.scala 310:20]
    wbu1.clock <= clock
    wbu1.reset <= reset
    wbu1.io.i_pc_next <= exu2wbu_pc_next @[scala/cpu.scala 311:21]
    wbu1.io.i_pre_valid <= exu2wbu_valid @[scala/cpu.scala 312:23]
    wbu1.io.i_rd_addr <= exu2wbu_rd_addr @[scala/cpu.scala 313:21]
    wbu1.io.i_csr_addr <= exu2wbu_csr_addr @[scala/cpu.scala 314:22]
    wbu1.io.i_brch <= exu2wbu_brch @[scala/cpu.scala 315:18]
    wbu1.io.i_jal <= exu2wbu_jal @[scala/cpu.scala 316:17]
    wbu1.io.i_wen <= exu2wbu_wen @[scala/cpu.scala 317:17]
    wbu1.io.i_csr_wen <= exu2wbu_csr_wen @[scala/cpu.scala 318:21]
    wbu1.io.i_jalr <= exu2wbu_jalr @[scala/cpu.scala 319:18]
    wbu1.io.i_ebreak <= exu2wbu_ebreak @[scala/cpu.scala 320:20]
    wbu1.io.i_mret <= exu2wbu_mret @[scala/cpu.scala 321:18]
    wbu1.io.i_ecall <= exu2wbu_ecall @[scala/cpu.scala 322:19]
    wbu1.io.i_res <= exu2wbu_res @[scala/cpu.scala 323:17]
    pc_next <= wbu1.io.o_pc_next @[scala/cpu.scala 325:21]
    pc_update_en <= wbu1.io.o_pc_update @[scala/cpu.scala 326:21]
    wbu_rd_wdata <= wbu1.io.o_rd_wdata @[scala/cpu.scala 327:21]
    wbu_rd_addr <= wbu1.io.o_rd_addr @[scala/cpu.scala 328:21]
    wbu_csr_addr <= wbu1.io.o_csr_addr @[scala/cpu.scala 329:21]
    csr_rd_wdata <= wbu1.io.o_csr_rd_wdata @[scala/cpu.scala 330:21]
    wbu_wen <= wbu1.io.o_wbu_wen @[scala/cpu.scala 331:21]
    wbu_csr_wen <= wbu1.io.o_wbu_csr_wen @[scala/cpu.scala 332:21]
    wbu2exu_ready <= wbu1.io.o_pre_ready @[scala/cpu.scala 333:21]
    xbar.io.sram.AXI_BID <= io.io_master.AXI_BID @[scala/cpu.scala 336:16]
    io.io_master.AXI_BREADY <= xbar.io.sram.AXI_BREADY @[scala/cpu.scala 336:16]
    xbar.io.sram.AXI_BVALID <= io.io_master.AXI_BVALID @[scala/cpu.scala 336:16]
    xbar.io.sram.AXI_BRESP <= io.io_master.AXI_BRESP @[scala/cpu.scala 336:16]
    io.io_master.AXI_ARBURST <= xbar.io.sram.AXI_ARBURST @[scala/cpu.scala 336:16]
    io.io_master.AXI_ARSIZE <= xbar.io.sram.AXI_ARSIZE @[scala/cpu.scala 336:16]
    io.io_master.AXI_ARLEN <= xbar.io.sram.AXI_ARLEN @[scala/cpu.scala 336:16]
    io.io_master.AXI_ARID <= xbar.io.sram.AXI_ARID @[scala/cpu.scala 336:16]
    xbar.io.sram.AXI_ARREADY <= io.io_master.AXI_ARREADY @[scala/cpu.scala 336:16]
    io.io_master.AXI_ARVALID <= xbar.io.sram.AXI_ARVALID @[scala/cpu.scala 336:16]
    io.io_master.AXI_ARADDR <= xbar.io.sram.AXI_ARADDR @[scala/cpu.scala 336:16]
    xbar.io.sram.AXI_RLAST <= io.io_master.AXI_RLAST @[scala/cpu.scala 336:16]
    xbar.io.sram.AXI_RID <= io.io_master.AXI_RID @[scala/cpu.scala 336:16]
    io.io_master.AXI_RREADY <= xbar.io.sram.AXI_RREADY @[scala/cpu.scala 336:16]
    xbar.io.sram.AXI_RVALID <= io.io_master.AXI_RVALID @[scala/cpu.scala 336:16]
    xbar.io.sram.AXI_RRESP <= io.io_master.AXI_RRESP @[scala/cpu.scala 336:16]
    xbar.io.sram.AXI_RDATA <= io.io_master.AXI_RDATA @[scala/cpu.scala 336:16]
    io.io_master.AXI_WLAST <= xbar.io.sram.AXI_WLAST @[scala/cpu.scala 336:16]
    io.io_master.AXI_WSTRB <= xbar.io.sram.AXI_WSTRB @[scala/cpu.scala 336:16]
    io.io_master.AXI_WDATA <= xbar.io.sram.AXI_WDATA @[scala/cpu.scala 336:16]
    xbar.io.sram.AXI_WREADY <= io.io_master.AXI_WREADY @[scala/cpu.scala 336:16]
    io.io_master.AXI_WVALID <= xbar.io.sram.AXI_WVALID @[scala/cpu.scala 336:16]
    io.io_master.AXI_AWID <= xbar.io.sram.AXI_AWID @[scala/cpu.scala 336:16]
    io.io_master.AXI_AWBURST <= xbar.io.sram.AXI_AWBURST @[scala/cpu.scala 336:16]
    io.io_master.AXI_AWSIZE <= xbar.io.sram.AXI_AWSIZE @[scala/cpu.scala 336:16]
    io.io_master.AXI_AWLEN <= xbar.io.sram.AXI_AWLEN @[scala/cpu.scala 336:16]
    xbar.io.sram.AXI_AWREADY <= io.io_master.AXI_AWREADY @[scala/cpu.scala 336:16]
    io.io_master.AXI_AWVALID <= xbar.io.sram.AXI_AWVALID @[scala/cpu.scala 336:16]
    io.io_master.AXI_AWADDR <= xbar.io.sram.AXI_AWADDR @[scala/cpu.scala 336:16]

  extmodule ram_simulation :
    input clock : Clock
    input reset : UInt<1>
    output sram : { flip AXI_AWADDR : UInt<32>, flip AXI_AWVALID : UInt<1>, AXI_AWREADY : UInt<1>, flip AXI_AWLEN : UInt<8>, flip AXI_AWSIZE : UInt<3>, flip AXI_AWBURST : UInt<2>, flip AXI_AWID : UInt<4>, flip AXI_WVALID : UInt<1>, AXI_WREADY : UInt<1>, flip AXI_WDATA : UInt<32>, flip AXI_WSTRB : UInt<4>, flip AXI_WLAST : UInt<1>, AXI_RDATA : UInt<32>, AXI_RRESP : UInt<2>, AXI_RVALID : UInt<1>, flip AXI_RREADY : UInt<1>, AXI_RID : UInt<4>, AXI_RLAST : UInt<1>, flip AXI_ARADDR : UInt<32>, flip AXI_ARVALID : UInt<1>, AXI_ARREADY : UInt<1>, flip AXI_ARID : UInt<4>, flip AXI_ARLEN : UInt<8>, flip AXI_ARSIZE : UInt<3>, flip AXI_ARBURST : UInt<2>, AXI_BRESP : UInt<2>, AXI_BVALID : UInt<1>, flip AXI_BREADY : UInt<1>, AXI_BID : UInt<4>}
    defname = ram_simulation

  module RamSimulation :
    input clock : Clock
    input reset : Reset
    output io : { sram : { flip AXI_AWADDR : UInt<32>, flip AXI_AWVALID : UInt<1>, AXI_AWREADY : UInt<1>, flip AXI_AWLEN : UInt<8>, flip AXI_AWSIZE : UInt<3>, flip AXI_AWBURST : UInt<2>, flip AXI_AWID : UInt<4>, flip AXI_WVALID : UInt<1>, AXI_WREADY : UInt<1>, flip AXI_WDATA : UInt<32>, flip AXI_WSTRB : UInt<4>, flip AXI_WLAST : UInt<1>, AXI_RDATA : UInt<32>, AXI_RRESP : UInt<2>, AXI_RVALID : UInt<1>, flip AXI_RREADY : UInt<1>, AXI_RID : UInt<4>, AXI_RLAST : UInt<1>, flip AXI_ARADDR : UInt<32>, flip AXI_ARVALID : UInt<1>, AXI_ARREADY : UInt<1>, flip AXI_ARID : UInt<4>, flip AXI_ARLEN : UInt<8>, flip AXI_ARSIZE : UInt<3>, flip AXI_ARBURST : UInt<2>, AXI_BRESP : UInt<2>, AXI_BVALID : UInt<1>, flip AXI_BREADY : UInt<1>, AXI_BID : UInt<4>}} @[scala/ram/Sram.scala 294:14]

    inst sram_sim of ram_simulation @[scala/ram/Sram.scala 298:24]
    sram_sim.clock <= clock @[scala/ram/Sram.scala 299:21]
    sram_sim.reset <= reset @[scala/ram/Sram.scala 300:21]
    io.sram.AXI_BID <= sram_sim.sram.AXI_BID @[scala/ram/Sram.scala 301:20]
    sram_sim.sram.AXI_BREADY <= io.sram.AXI_BREADY @[scala/ram/Sram.scala 301:20]
    io.sram.AXI_BVALID <= sram_sim.sram.AXI_BVALID @[scala/ram/Sram.scala 301:20]
    io.sram.AXI_BRESP <= sram_sim.sram.AXI_BRESP @[scala/ram/Sram.scala 301:20]
    sram_sim.sram.AXI_ARBURST <= io.sram.AXI_ARBURST @[scala/ram/Sram.scala 301:20]
    sram_sim.sram.AXI_ARSIZE <= io.sram.AXI_ARSIZE @[scala/ram/Sram.scala 301:20]
    sram_sim.sram.AXI_ARLEN <= io.sram.AXI_ARLEN @[scala/ram/Sram.scala 301:20]
    sram_sim.sram.AXI_ARID <= io.sram.AXI_ARID @[scala/ram/Sram.scala 301:20]
    io.sram.AXI_ARREADY <= sram_sim.sram.AXI_ARREADY @[scala/ram/Sram.scala 301:20]
    sram_sim.sram.AXI_ARVALID <= io.sram.AXI_ARVALID @[scala/ram/Sram.scala 301:20]
    sram_sim.sram.AXI_ARADDR <= io.sram.AXI_ARADDR @[scala/ram/Sram.scala 301:20]
    io.sram.AXI_RLAST <= sram_sim.sram.AXI_RLAST @[scala/ram/Sram.scala 301:20]
    io.sram.AXI_RID <= sram_sim.sram.AXI_RID @[scala/ram/Sram.scala 301:20]
    sram_sim.sram.AXI_RREADY <= io.sram.AXI_RREADY @[scala/ram/Sram.scala 301:20]
    io.sram.AXI_RVALID <= sram_sim.sram.AXI_RVALID @[scala/ram/Sram.scala 301:20]
    io.sram.AXI_RRESP <= sram_sim.sram.AXI_RRESP @[scala/ram/Sram.scala 301:20]
    io.sram.AXI_RDATA <= sram_sim.sram.AXI_RDATA @[scala/ram/Sram.scala 301:20]
    sram_sim.sram.AXI_WLAST <= io.sram.AXI_WLAST @[scala/ram/Sram.scala 301:20]
    sram_sim.sram.AXI_WSTRB <= io.sram.AXI_WSTRB @[scala/ram/Sram.scala 301:20]
    sram_sim.sram.AXI_WDATA <= io.sram.AXI_WDATA @[scala/ram/Sram.scala 301:20]
    io.sram.AXI_WREADY <= sram_sim.sram.AXI_WREADY @[scala/ram/Sram.scala 301:20]
    sram_sim.sram.AXI_WVALID <= io.sram.AXI_WVALID @[scala/ram/Sram.scala 301:20]
    sram_sim.sram.AXI_AWID <= io.sram.AXI_AWID @[scala/ram/Sram.scala 301:20]
    sram_sim.sram.AXI_AWBURST <= io.sram.AXI_AWBURST @[scala/ram/Sram.scala 301:20]
    sram_sim.sram.AXI_AWSIZE <= io.sram.AXI_AWSIZE @[scala/ram/Sram.scala 301:20]
    sram_sim.sram.AXI_AWLEN <= io.sram.AXI_AWLEN @[scala/ram/Sram.scala 301:20]
    io.sram.AXI_AWREADY <= sram_sim.sram.AXI_AWREADY @[scala/ram/Sram.scala 301:20]
    sram_sim.sram.AXI_AWVALID <= io.sram.AXI_AWVALID @[scala/ram/Sram.scala 301:20]
    sram_sim.sram.AXI_AWADDR <= io.sram.AXI_AWADDR @[scala/ram/Sram.scala 301:20]

  module top :
    input clock : Clock
    input reset : UInt<1>
    output io : { io_master : { AXI_AWADDR : UInt<32>, AXI_AWVALID : UInt<1>, flip AXI_AWREADY : UInt<1>, AXI_AWLEN : UInt<8>, AXI_AWSIZE : UInt<3>, AXI_AWBURST : UInt<2>, AXI_AWID : UInt<4>, AXI_WVALID : UInt<1>, flip AXI_WREADY : UInt<1>, AXI_WDATA : UInt<32>, AXI_WSTRB : UInt<4>, AXI_WLAST : UInt<1>, flip AXI_RDATA : UInt<32>, flip AXI_RRESP : UInt<2>, flip AXI_RVALID : UInt<1>, AXI_RREADY : UInt<1>, flip AXI_RID : UInt<4>, flip AXI_RLAST : UInt<1>, AXI_ARADDR : UInt<32>, AXI_ARVALID : UInt<1>, flip AXI_ARREADY : UInt<1>, AXI_ARID : UInt<4>, AXI_ARLEN : UInt<8>, AXI_ARSIZE : UInt<3>, AXI_ARBURST : UInt<2>, flip AXI_BRESP : UInt<2>, flip AXI_BVALID : UInt<1>, AXI_BREADY : UInt<1>, flip AXI_BID : UInt<4>}, data : UInt<32>, data_valid : UInt<1>} @[scala/top.scala 11:14]

    inst cpu of CpuCore @[scala/top.scala 17:19]
    cpu.clock <= clock
    cpu.reset <= reset
    inst sram of RamSimulation @[scala/top.scala 18:20]
    sram.clock <= clock
    sram.reset <= reset
    cpu.io.io_master.AXI_BID <= sram.io.sram.AXI_BID @[scala/top.scala 21:20]
    sram.io.sram.AXI_BREADY <= cpu.io.io_master.AXI_BREADY @[scala/top.scala 21:20]
    cpu.io.io_master.AXI_BVALID <= sram.io.sram.AXI_BVALID @[scala/top.scala 21:20]
    cpu.io.io_master.AXI_BRESP <= sram.io.sram.AXI_BRESP @[scala/top.scala 21:20]
    sram.io.sram.AXI_ARBURST <= cpu.io.io_master.AXI_ARBURST @[scala/top.scala 21:20]
    sram.io.sram.AXI_ARSIZE <= cpu.io.io_master.AXI_ARSIZE @[scala/top.scala 21:20]
    sram.io.sram.AXI_ARLEN <= cpu.io.io_master.AXI_ARLEN @[scala/top.scala 21:20]
    sram.io.sram.AXI_ARID <= cpu.io.io_master.AXI_ARID @[scala/top.scala 21:20]
    cpu.io.io_master.AXI_ARREADY <= sram.io.sram.AXI_ARREADY @[scala/top.scala 21:20]
    sram.io.sram.AXI_ARVALID <= cpu.io.io_master.AXI_ARVALID @[scala/top.scala 21:20]
    sram.io.sram.AXI_ARADDR <= cpu.io.io_master.AXI_ARADDR @[scala/top.scala 21:20]
    cpu.io.io_master.AXI_RLAST <= sram.io.sram.AXI_RLAST @[scala/top.scala 21:20]
    cpu.io.io_master.AXI_RID <= sram.io.sram.AXI_RID @[scala/top.scala 21:20]
    sram.io.sram.AXI_RREADY <= cpu.io.io_master.AXI_RREADY @[scala/top.scala 21:20]
    cpu.io.io_master.AXI_RVALID <= sram.io.sram.AXI_RVALID @[scala/top.scala 21:20]
    cpu.io.io_master.AXI_RRESP <= sram.io.sram.AXI_RRESP @[scala/top.scala 21:20]
    cpu.io.io_master.AXI_RDATA <= sram.io.sram.AXI_RDATA @[scala/top.scala 21:20]
    sram.io.sram.AXI_WLAST <= cpu.io.io_master.AXI_WLAST @[scala/top.scala 21:20]
    sram.io.sram.AXI_WSTRB <= cpu.io.io_master.AXI_WSTRB @[scala/top.scala 21:20]
    sram.io.sram.AXI_WDATA <= cpu.io.io_master.AXI_WDATA @[scala/top.scala 21:20]
    cpu.io.io_master.AXI_WREADY <= sram.io.sram.AXI_WREADY @[scala/top.scala 21:20]
    sram.io.sram.AXI_WVALID <= cpu.io.io_master.AXI_WVALID @[scala/top.scala 21:20]
    sram.io.sram.AXI_AWID <= cpu.io.io_master.AXI_AWID @[scala/top.scala 21:20]
    sram.io.sram.AXI_AWBURST <= cpu.io.io_master.AXI_AWBURST @[scala/top.scala 21:20]
    sram.io.sram.AXI_AWSIZE <= cpu.io.io_master.AXI_AWSIZE @[scala/top.scala 21:20]
    sram.io.sram.AXI_AWLEN <= cpu.io.io_master.AXI_AWLEN @[scala/top.scala 21:20]
    cpu.io.io_master.AXI_AWREADY <= sram.io.sram.AXI_AWREADY @[scala/top.scala 21:20]
    sram.io.sram.AXI_AWVALID <= cpu.io.io_master.AXI_AWVALID @[scala/top.scala 21:20]
    sram.io.sram.AXI_AWADDR <= cpu.io.io_master.AXI_AWADDR @[scala/top.scala 21:20]
    io.data <= cpu.io.data @[scala/top.scala 22:11]
    io.data_valid <= cpu.io.hit @[scala/top.scala 23:17]
    cpu.io.ifu_master.AXI_BID <= io.io_master.AXI_BID @[scala/top.scala 24:16]
    io.io_master.AXI_BREADY <= cpu.io.ifu_master.AXI_BREADY @[scala/top.scala 24:16]
    cpu.io.ifu_master.AXI_BVALID <= io.io_master.AXI_BVALID @[scala/top.scala 24:16]
    cpu.io.ifu_master.AXI_BRESP <= io.io_master.AXI_BRESP @[scala/top.scala 24:16]
    io.io_master.AXI_ARBURST <= cpu.io.ifu_master.AXI_ARBURST @[scala/top.scala 24:16]
    io.io_master.AXI_ARSIZE <= cpu.io.ifu_master.AXI_ARSIZE @[scala/top.scala 24:16]
    io.io_master.AXI_ARLEN <= cpu.io.ifu_master.AXI_ARLEN @[scala/top.scala 24:16]
    io.io_master.AXI_ARID <= cpu.io.ifu_master.AXI_ARID @[scala/top.scala 24:16]
    cpu.io.ifu_master.AXI_ARREADY <= io.io_master.AXI_ARREADY @[scala/top.scala 24:16]
    io.io_master.AXI_ARVALID <= cpu.io.ifu_master.AXI_ARVALID @[scala/top.scala 24:16]
    io.io_master.AXI_ARADDR <= cpu.io.ifu_master.AXI_ARADDR @[scala/top.scala 24:16]
    cpu.io.ifu_master.AXI_RLAST <= io.io_master.AXI_RLAST @[scala/top.scala 24:16]
    cpu.io.ifu_master.AXI_RID <= io.io_master.AXI_RID @[scala/top.scala 24:16]
    io.io_master.AXI_RREADY <= cpu.io.ifu_master.AXI_RREADY @[scala/top.scala 24:16]
    cpu.io.ifu_master.AXI_RVALID <= io.io_master.AXI_RVALID @[scala/top.scala 24:16]
    cpu.io.ifu_master.AXI_RRESP <= io.io_master.AXI_RRESP @[scala/top.scala 24:16]
    cpu.io.ifu_master.AXI_RDATA <= io.io_master.AXI_RDATA @[scala/top.scala 24:16]
    io.io_master.AXI_WLAST <= cpu.io.ifu_master.AXI_WLAST @[scala/top.scala 24:16]
    io.io_master.AXI_WSTRB <= cpu.io.ifu_master.AXI_WSTRB @[scala/top.scala 24:16]
    io.io_master.AXI_WDATA <= cpu.io.ifu_master.AXI_WDATA @[scala/top.scala 24:16]
    cpu.io.ifu_master.AXI_WREADY <= io.io_master.AXI_WREADY @[scala/top.scala 24:16]
    io.io_master.AXI_WVALID <= cpu.io.ifu_master.AXI_WVALID @[scala/top.scala 24:16]
    io.io_master.AXI_AWID <= cpu.io.ifu_master.AXI_AWID @[scala/top.scala 24:16]
    io.io_master.AXI_AWBURST <= cpu.io.ifu_master.AXI_AWBURST @[scala/top.scala 24:16]
    io.io_master.AXI_AWSIZE <= cpu.io.ifu_master.AXI_AWSIZE @[scala/top.scala 24:16]
    io.io_master.AXI_AWLEN <= cpu.io.ifu_master.AXI_AWLEN @[scala/top.scala 24:16]
    cpu.io.ifu_master.AXI_AWREADY <= io.io_master.AXI_AWREADY @[scala/top.scala 24:16]
    io.io_master.AXI_AWVALID <= cpu.io.ifu_master.AXI_AWVALID @[scala/top.scala 24:16]
    io.io_master.AXI_AWADDR <= cpu.io.ifu_master.AXI_AWADDR @[scala/top.scala 24:16]

